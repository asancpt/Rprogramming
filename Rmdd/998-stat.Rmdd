
## ANOVA in R
1-Way ANOVA
We’re going to use a data set called InsectSprays. 6 different insect sprays (1 Independent
Variable with 6 levels) were tested to see if there was a difference in the number of insects
found in the field after each spraying (Dependent Variable).

```{r}
attach(InsectSprays)
data(InsectSprays)
str(InsectSprays)
```

### Descriptive statistics
a. Mean, variance, number of elements in each cell
b. Visualise the data – boxplot; look at distribution, look for outliers
We’ll use the tapply() function which is a helpful shortcut in processing data, basically
allowing you to specify a response variable, a factor (or factors) and a function that should be
applied to each subset of the response variable defined by each level of the factor. I.e. Instead
of doing:

> mean(count[spray=="A"])   # and the same for B, C, D etc.
We use tapply(response,factor,function-name) as follows
• Let’s look at the means:
> tapply(count, spray, mean)
 A B C D E F
14.500000 15.333333 2.083333 4.916667 3.500000 16.666667
• The variances:
> tapply(count, spray, var)
 A B C D E F
22.272727 18.242424 3.901515 6.265152 3.000000 38.606061
• And sample sizes
> tapply(count, spray, length)
 A B C D E F
12 12 12 12 12 12
• And a boxplot:
> boxplot(count ~ spray) 



A couple of Asides
• Default order is alphabetical. R needs, for example, the control condition to be 1st for
treatment contrasts to be easily interpreted.
• If they’re not automatically in the correct order – i.e. if they were ordered variables, but
came out alphabetically (e.g. "Very.short","Short","Long","Very.long" or “A”, “B”,
“Control”), re-order the variables for ordered IV:
To change to, for example, F < B < C < D < E < A, use:
> Photoperiod<-ordered(spray,levels=c("F","B","C","D","E","A"))
Check it:
> tapply(count,Photoperiod,mean)
 F B C D E A
