[
["index.html", "R Programming: Lecture Notes Preface Teaching Assistant FAQ Syllabus", " R Programming: Lecture Notes Kyun-Seop Bae, Sungpil Han 2017-07-05 Preface 안녕하십니까? 2017년 1학기 울산대학교 의학과 대학원 수업 R Programming 과목 담당교수 배균섭입니다. R은 http://cran.r-project.org 에서 다운로드받아 설치할 수 있습니다. 역시 같은 사이트에서 Manual이 나와 있으니 참고하시기 바랍니다. 구글에서 ‘R Programming pdf’와 같은 키워드로 검색하시면 많은 자료를 보실 수 있습니다. 첨부한 R.stx 파일은 AcroEdit이라는 editor에서 사용할 syntax highlighting용 구문 파일입니다. http://www.acrosoft.pe.kr 에서 다운로드 받아 설치하시기 바랍니다. AcroEdit대신 notepad++를 선호하시는 분은 그대로 사용하셔도 됩니다. 저는 RStudio, tinnR 등을 이용해서 강의하지 않습니다만, 필요하신 분은 쓰셔도 괜찮습니다. 향후 R package 작성을 위해서는 MiKTeX와 Rtools를 설치하십시오. 추가로 말씀드리자면, http://www.coursera.org 에 많은 R 강좌가 개설되어 있습니다. Specialization course로 들어가면 유로이지만, (Specialization course는 여러 개의 과목이 합쳐져 있는 것입니다.) 개별 과목을 검색해서 들어가면, 무료로도 볼 수 있습니다. (대신 시험을 칠 수 없거나, certificate를 받을 수 없습니다.) 좋은 강좌가 많으니 많이 활용하시기 바립니다. 강의 장소에 불편함이 많은 것으로 생각되어, 다음과 같이 Skype 모임을 개설하였습니다. 사정상 원거리에서 오시기 불편한 분들은 활용하시기 바랍니다. 출석은 화면을 캡쳐하거나 휴대폰으로 찍은 뒤 sec@acp.kr, shan@acp.kr로 보내주시면 출석으로 인정해 드립니다. Skype 모임 참가 https://meet.lync.com/uucp-acp/ksbae/SKGJ3BNQ 2017년 3월, 배균섭 배상 The online version of this book is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. Creative Commons License Teaching Assistant 안녕하십니까? 서울아산병원 임상약리학과 전공의 한성필입니다. 수업과 관련된 여러 제반 업무를 담당하고 있습니다. 언제든 의문사항 있으면 r@acr.kr 로 전체 메일 보내시거나 교수님 k@acr.kr 혹은 제 개인 메일 shan@acp.kr로 연락해 주십시오. 교수님께서 세우신 방침에 따라 수업시간에 출석을 부르지 않을 예정입니다. 수강하시는 화면(Skype)을 휴대폰으로 사진 찍으시거나 강의실의 스크린을 사진으로 촬영하셔서 sec@acp.kr / shan@acp.kr 로 동시에 보내주시면 됩니다. 가급적 “2017-03-31 한성필 출석” 과 같은 식의 제목을 유지해 주시면 처리하는데 큰 도움이 될 것 같습니다. 출석 체크를 위해 전체메일을 사용하지 말아주십시오! 아울러 수업 중에 사용한 코드/스크립트를 사용하여 R의 패키지인 bookdown을 사용해 웹북을 제작 중에 있습니다. (Xie 2017) 여러분이 읽고 있는 이 책 자체가 R 코드의 일종인 Rmarkdown의 결과물이라고 보시면 됩니다. Github 저장소가 있으니 소스 코드를 보실 수 있습니다. 누구나 소스를 편집하여 Pull Request를 요청할 수 있으므로 혹시 Github를 사용하셔서 웹북의 질을 높이고자 하시는 수강생 선생님들께서는 도움을 주십시오. 감사합니다. 2017년 3월, 한성필 올림 FAQ 접속 관련 Q. 스카이프를 한번도 안써봐서 이참에 사용법을 배우고있는데, 수업시작시에 상대방을 어떻게 검색해서 들어가면 될지 알려주시면 감사하겠습니다. Q. 온라인 수강시 접속하는 스카이프 주소는 무엇인지요? https://meet.lync.com/uucp-acp/ksbae/SKGJ3BNQ Chrome 등 웹브라우저에서 위 주소를 입력하면 직접 대화방으로 연결됩니다. (검색할 필요 없습니다.) 처음 설치시에는 Add-on이 설치될 수 있습니다. MacOS Sierra, Win7, Win10에서 Chrome, Internet Explorer 등을 사용하여 테스트해 보았고 모두 잘 동작하였습니다. 대부분의 경우 Skype For Business 계정이 없을 것으로 생각되는데 따로 로그인할 필요 없습니다. 수업 시작 30분 전부터 대화방을 개설해 놓도록 하겠습니다. https://groups.google.com/a/acr.kr/d/msg/r/nUkrE37W2kQ/waG-FkM_BgAJ 교수님께서 처음 보낸 메일을 참고해 주십시오. Q. 앞으로 수업은 지난 첫수업처럼 계속 온라인 수강이 가능한 것인가요? 네, 계속 온라인으로 가능합니다. Q. 저도 웹캠을 설치하여야 하여야 하나요? 설치할 필요 없습니다. 오히려 수강자의 웹캠의 전원을 꺼두시길 권고드립니다. Q. 수강전 온라인 강의 테스트 해볼 수 있나요? 수업 시작 30분 전부터 대화방을 개설하여 놓도록 하겠습니다. 출석관련 Q. 미국학회 참석으로 수업시간이 귀국행 비행기 기내에 있을거같아 출석이 안될것 같습니다. 방법이 있을지요? 결석 사유서를 제출해 주시면 출석 처리 하겠습니다. 대학원 홈페이지 참고 바랍니다. 이 링크로 들어가시면 가장 위에 있습니다. (결석사유서.hwp) 참고로 수업 영상은 녹화하여 Youtube에 비공개 링크를 만들 예정이라서 추후에 관련 영상을 시청할 수 있을 것 같습니다. 결석사유서를 제출한다고 100% 출석이 인정되는 것은 아닙니다. 이것이 기본적으로는 offline강의이기 때문에 강의시간에 강의실에 있든지, 또는 온라인으로 접속해 있어야 합니다. 출석사유서를 제출하거나, 추후 동영상 시청을 해서 그 증거(사진)을 제출하는 경우에 감점을 줄여드릴 수 있습니다. 예를 들어, 결석시에는 2점 감점인데, 결석사유서를 제출하면 1점만 감점한다는지, 동영상을 보면 0.5점만 감점한다는지 하는 것입니다. 결석 사유서 제출 시 출석 처리 원칙에 대한 설명을 드리오니, 참고하시길 바랍니다. 과제 관련 Q. 과제물이 있다고 들었는데 언제 assign하게 되는지요? 과제물은 빨라야 5주차 이후에 나갑니다. 수업계획서가 변경되었다고하셨는데, 과정을보니 시험을 몇째주에 보는지 기재되어있지 않아서요, 성적평가에는 중간고사,기말고사,과제가 모두 적혀있는데 어떤것이 맞는 것 일까요? 중간 기말 고사는 따로 없습니다. 대신 강의를 합니다. (수업계획서 참고) Coursera 관련 Q. 첫 수업 때, certification 관련 말씀을 하셨는데, 정확히 coursera 사이트에서 어떤 것을 듣고, 제출을 해야하는지 궁금합니다. (비슷한 내용이 많아, 어떤것을 들어야하는지 헷갈립니다.) Coursera는 꼭 어느 것을 들어야 하는 것은 아니고, R programming과 관련된 것이라면 자유로이 골라서 들으면 됩니다. 대표적인 두 가지만 들자면 다음과 같습니다. https://www.coursera.org/learn/r-programming https://www.coursera.org/learn/r-programming-environment Q. Coursera 강의를 듣고 증명서를 내면 출석을 얼마나 커버할 수 있을런지요? Coursera는 출석 커버보다는 grade를 올려 주기 위한 것입니다. 출석은 Skype로 커버해야 합니다. 출석의 성적 반영비율은 25%이지만, 규정상 4회 이상 결석이면 성적이 나갈 수 없습니다. Syllabus 2017-04-10 현재 개정된 수업계획서입니다. Syllabus page 1 Syllabus page 1 References "],
["r-language.html", "Chapter 1 R language", " Chapter 1 R language 2017-03-15 배균섭 교수님 강의 R Language Definition의 초반 내용에 대해 설명하였습니다. "],
["assignments.html", "A Assignments A.1 Assignment 1 A.2 Assignment 2", " A Assignments A.1 Assignment 1 첨부한 concUnitConv-test.R과 유사한 R script를 실행하였을 때, concUnitConv-test.Rout과 유사한 결과나 나오는 concUnitConv.R 파일을 작성하시오. 제출기한: 2017-05-10 18:00 제출방법: R scirpt와 output을 k@acr.kr, shan@acp.kr, sec@acp.kr 로 제출 A.1.1 concUnitConv-test.R source(&quot;D:/G/Desk/R/concUnitConv.R&quot;) concUnitConv() # Wrong input concUnitConv(&quot;kg/L&quot;, &quot;g/L&quot;) # Wrong input concUnitConv(&quot;g/kL&quot;, &quot;g/L&quot;) # Wrong input concUnitConv(&quot;mg/L&quot;, &quot;ug/mL&quot;) Theoph$conc * concUnitConv(&quot;mg/L&quot;, &quot;ug/L&quot;) Theoph$conc * concUnitConv(&quot;mg/L&quot;, &quot;mg/mL&quot;) Theoph$conc * concUnitConv(&quot;mg/L&quot;, &quot;mmol/L&quot;) # Wrong input Theoph$conc * concUnitConv(&quot;mg/L&quot;, &quot;mmol/L&quot;, MW=-100) # Wrong input Theoph$conc * concUnitConv(&quot;mg/L&quot;, &quot;mM&quot;, MW=180.164) # Wrong input Theoph$conc * concUnitConv(&quot;mg/L&quot;, &quot;mmol/L&quot;, MW=180.164) Theoph$mM = Theoph$conc * concUnitConv(&quot;mg/L&quot;, &quot;mmol/L&quot;, MW=180.164) Theoph$mM * concUnitConv(&quot;mmol/L&quot;, &quot;ug/L&quot;, MW=180.164) Theoph$mM * concUnitConv(&quot;mmol/L&quot;, &quot;ug/mL&quot;, MW=180.164) A.1.2 concUnitConv-test.Rout &gt; source(&quot;D:/G/Desk/R/concUnitConv.R&quot;) &gt; &gt; concUnitConv() # Wrong input Error in concUnitConv() : Source concentration unit is not valid. &gt; concUnitConv(&quot;kg/L&quot;, &quot;g/L&quot;) # Wrong input Error in concUnitConv(&quot;kg/L&quot;, &quot;g/L&quot;) : Source amount is not supported. &gt; concUnitConv(&quot;g/kL&quot;, &quot;g/L&quot;) # Wrong input Error in concUnitConv(&quot;g/kL&quot;, &quot;g/L&quot;) : Volume unit is not supported. &gt; &gt; concUnitConv(&quot;mg/L&quot;, &quot;ug/mL&quot;) 1 &gt; Theoph$conc * concUnitConv(&quot;mg/L&quot;, &quot;ug/L&quot;) [1] 740 2840 6570 10500 9660 8580 8360 7470 6890 5940 3280 0 1720 7910 8310 8330 6850 6080 5400 4550 3010 900 0 4400 6900 8200 7800 [28] 7500 6200 5300 4900 3700 1050 0 1890 4600 8600 8380 7540 6880 5780 5330 4190 1150 0 2020 5630 11400 9330 8740 7560 7090 5900 4370 [55] 1570 0 1290 3080 6440 6320 5530 4940 4020 3460 2780 920 150 850 2350 5020 6580 7090 6660 5250 4390 3530 1150 0 3050 3050 7310 [82] 7560 6590 5880 4730 4570 3000 1250 0 7370 9030 7140 6330 5660 5670 4240 4110 3160 1120 240 2890 5220 6410 7830 10210 9180 8020 7140 [109] 5680 2420 0 4860 7240 8000 6810 5870 5220 4450 3620 2690 860 0 1250 3960 7820 9720 9750 8570 6590 6110 4570 1170 &gt; Theoph$conc * concUnitConv(&quot;mg/L&quot;, &quot;mg/mL&quot;) [1] 0.00074 0.00284 0.00657 0.01050 0.00966 0.00858 0.00836 0.00747 0.00689 0.00594 0.00328 0.00000 0.00172 0.00791 0.00831 0.00833 0.00685 0.00608 0.00540 0.00455 [21] 0.00301 0.00090 0.00000 0.00440 0.00690 0.00820 0.00780 0.00750 0.00620 0.00530 0.00490 0.00370 0.00105 0.00000 0.00189 0.00460 0.00860 0.00838 0.00754 0.00688 [41] 0.00578 0.00533 0.00419 0.00115 0.00000 0.00202 0.00563 0.01140 0.00933 0.00874 0.00756 0.00709 0.00590 0.00437 0.00157 0.00000 0.00129 0.00308 0.00644 0.00632 [61] 0.00553 0.00494 0.00402 0.00346 0.00278 0.00092 0.00015 0.00085 0.00235 0.00502 0.00658 0.00709 0.00666 0.00525 0.00439 0.00353 0.00115 0.00000 0.00305 0.00305 [81] 0.00731 0.00756 0.00659 0.00588 0.00473 0.00457 0.00300 0.00125 0.00000 0.00737 0.00903 0.00714 0.00633 0.00566 0.00567 0.00424 0.00411 0.00316 0.00112 0.00024 [101] 0.00289 0.00522 0.00641 0.00783 0.01021 0.00918 0.00802 0.00714 0.00568 0.00242 0.00000 0.00486 0.00724 0.00800 0.00681 0.00587 0.00522 0.00445 0.00362 0.00269 [121] 0.00086 0.00000 0.00125 0.00396 0.00782 0.00972 0.00975 0.00857 0.00659 0.00611 0.00457 0.00117 &gt; Theoph$conc * concUnitConv(&quot;mg/L&quot;, &quot;mmol/L&quot;) # Wrong input Error in concUnitConv(&quot;mg/L&quot;, &quot;mmol/L&quot;) : Positive molecular weight should be given. &gt; Theoph$conc * concUnitConv(&quot;mg/L&quot;, &quot;mmol/L&quot;, MW=-100) # Wrong input Error in concUnitConv(&quot;mg/L&quot;, &quot;mmol/L&quot;, MW = -100) : Positive molecular weight should be given. &gt; Theoph$conc * concUnitConv(&quot;mg/L&quot;, &quot;mM&quot;, MW=180.164) # Wrong input Error in concUnitConv(&quot;mg/L&quot;, &quot;mM&quot;, MW = 180.164) : Target concentration unit is not valid. &gt; Theoph$conc * concUnitConv(&quot;mg/L&quot;, &quot;mmol/L&quot;, MW=180.164) [1] 0.0041073688 0.0157634156 0.0364667747 0.0582802336 0.0536178149 0.0476232766 0.0464021669 0.0414622233 0.0382429342 0.0329699607 0.0182056349 0.0000000000 [13] 0.0095468573 0.0439044426 0.0461246420 0.0462356520 0.0380209143 0.0337470305 0.0299726915 0.0252547679 0.0167070003 0.0049954486 0.0000000000 0.0244221931 [25] 0.0382984392 0.0455140872 0.0432938878 0.0416287383 0.0344130903 0.0294176417 0.0271974423 0.0205368442 0.0058280234 0.0000000000 0.0104904420 0.0255322928 [37] 0.0477342865 0.0465131769 0.0418507582 0.0381874292 0.0320818810 0.0295841567 0.0232565884 0.0063830732 0.0000000000 0.0112120068 0.0312493062 0.0632756822 [49] 0.0517861504 0.0485113563 0.0419617682 0.0393530339 0.0327479408 0.0242556782 0.0087142825 0.0000000000 0.0071601430 0.0170955352 0.0357452099 0.0350791501 [61] 0.0306942563 0.0274194623 0.0223130037 0.0192047246 0.0154303856 0.0051064586 0.0008325748 0.0047179237 0.0130436713 0.0278635021 0.0365222797 0.0393530339 [73] 0.0369663196 0.0291401168 0.0243666881 0.0195932595 0.0063830732 0.0000000000 0.0169290202 0.0169290202 0.0405741436 0.0419617682 0.0365777847 0.0326369308 [85] 0.0262538576 0.0253657778 0.0166514953 0.0069381230 0.0000000000 0.0409071735 0.0501210009 0.0396305588 0.0351346551 0.0314158211 0.0314713261 0.0235341134 [97] 0.0228125486 0.0175395751 0.0062165582 0.0013321196 0.0160409405 0.0289736018 0.0355786950 0.0434604027 0.0566705890 0.0509535756 0.0445149974 0.0396305588 [109] 0.0315268311 0.0134322062 0.0000000000 0.0269754224 0.0401856087 0.0444039875 0.0377988943 0.0325814258 0.0289736018 0.0246997180 0.0200928043 0.0149308408 [121] 0.0047734287 0.0000000000 0.0069381230 0.0219799738 0.0434048978 0.0539508448 0.0541173597 0.0475677716 0.0365777847 0.0339135454 0.0253657778 0.0064940832 &gt; Theoph$mM = Theoph$conc * concUnitConv(&quot;mg/L&quot;, &quot;mmol/L&quot;, MW=180.164) &gt; Theoph$mM * concUnitConv(&quot;mmol/L&quot;, &quot;ug/L&quot;, MW=180.164) [1] 740 2840 6570 10500 9660 8580 8360 7470 6890 5940 3280 0 1720 7910 8310 8330 6850 6080 5400 4550 3010 900 0 4400 6900 8200 7800 [28] 7500 6200 5300 4900 3700 1050 0 1890 4600 8600 8380 7540 6880 5780 5330 4190 1150 0 2020 5630 11400 9330 8740 7560 7090 5900 4370 [55] 1570 0 1290 3080 6440 6320 5530 4940 4020 3460 2780 920 150 850 2350 5020 6580 7090 6660 5250 4390 3530 1150 0 3050 3050 7310 [82] 7560 6590 5880 4730 4570 3000 1250 0 7370 9030 7140 6330 5660 5670 4240 4110 3160 1120 240 2890 5220 6410 7830 10210 9180 8020 7140 [109] 5680 2420 0 4860 7240 8000 6810 5870 5220 4450 3620 2690 860 0 1250 3960 7820 9720 9750 8570 6590 6110 4570 1170 &gt; Theoph$mM * concUnitConv(&quot;mmol/L&quot;, &quot;ug/mL&quot;, MW=180.164) [1] 0.74 2.84 6.57 10.50 9.66 8.58 8.36 7.47 6.89 5.94 3.28 0.00 1.72 7.91 8.31 8.33 6.85 6.08 5.40 4.55 3.01 0.90 0.00 4.40 6.90 8.20 7.80 [28] 7.50 6.20 5.30 4.90 3.70 1.05 0.00 1.89 4.60 8.60 8.38 7.54 6.88 5.78 5.33 4.19 1.15 0.00 2.02 5.63 11.40 9.33 8.74 7.56 7.09 5.90 4.37 [55] 1.57 0.00 1.29 3.08 6.44 6.32 5.53 4.94 4.02 3.46 2.78 0.92 0.15 0.85 2.35 5.02 6.58 7.09 6.66 5.25 4.39 3.53 1.15 0.00 3.05 3.05 7.31 [82] 7.56 6.59 5.88 4.73 4.57 3.00 1.25 0.00 7.37 9.03 7.14 6.33 5.66 5.67 4.24 4.11 3.16 1.12 0.24 2.89 5.22 6.41 7.83 10.21 9.18 8.02 7.14 [109] 5.68 2.42 0.00 4.86 7.24 8.00 6.81 5.87 5.22 4.45 3.62 2.69 0.86 0.00 1.25 3.96 7.82 9.72 9.75 8.57 6.59 6.11 4.57 1.17 &gt; &gt; A.2 Assignment 2 자신이 직접 R package를 만드는 것이 과제 2입니다. 제출기한: 2017-06-21 18:00 제출방법: R package를 shan@acp.kr과 ksbae@acp.kr 메일로 보내십시오. CRAN에 올리면 더 좋습니다. "],
["as-is-r-files.html", "B As-is R Files B.1 Lecture 3 B.2 Lecture 4 B.3 Lecture 5", " B As-is R Files 교수님께서 주신 원본 R 파일 입니다. B.1 Lecture 3 ################################################# ##---------------------------------------------## ## Graphics ## ##---------------------------------------------## ################################################# # 상위수준 그림 함수는 그림을 생성한다. # 하위수준 그림 함수는 기존의 그림에 그림을 추가한다. ## 상위수준 그림 함수의 주요 인자 (arguments) ### # main : 제목 # xlab/ylab : x축 및 y축 레이블 # xlim/ylim : x축 및 y축 범위 # col : 색깔 # lty : 선 모양 # pch : 점 모양 # cex : 그림 성분의 크기 # lwd : 선 굵기 # type : 그림 타입 ################################################# ########## 상위수준 그림 함수 ############ ################################################# WD &lt;- &quot;D:\\\\AMC\\\\Education\\\\UU\\\\2017\\\\R\\\\Graphics\\\\&quot; setwd(WD) dta &lt;- read.csv(&quot;PK.csv&quot;) head(dta) str(dta) ################ scatter plot ################### plot(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0]) plot(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], log=&quot;y&quot;) plot(dta$TIME[dta$MDV==0], log(dta$DV[dta$MDV==0])) plot(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0] , xlab=&quot;Time (hr)&quot;, ylab=&quot;Concentration (ng/mL)&quot; , type=&quot;o&quot;, pch=2, col=1, main=&quot;PK time-course of Drug X&quot; , xlim =c(-2,218), ylim=c(0,80)) plot(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], axes=F, , xlab=&quot;Time (hr)&quot;, ylab=&quot;Concentration (ng/mL)&quot; , type=&quot;o&quot;, pch=2, col=1, main=&quot;PK time-course of Drug X&quot; , xlim =c(-2,218), ylim=c(0,80)) axis(1, at=seq(0, 218, 24)) axis(2) box() ################## Histogram #################### d.demog &lt;- read.csv(&quot;DEMOG.csv&quot;) # histogram hist(d.demog$HT) hist(d.demog$HT, breaks=10) hist(d.demog$HT, nclass=10) # with density line hist (d.demog$HT, probability=TRUE, breaks=10) lines(density(d.demog$HT)) hist (d.demog$HT, probability=TRUE, breaks=9, xaxt=&quot;n&quot; , main=&quot;Histogram for Height&quot;, xlab=&quot;Height (cm)&quot;, ylab=&quot;Probability (%)&quot;) axis(1, at=seq(min(d.demog$HT), max(d.demog$HT), 3)) lines(density(d.demog$HT)) hist (d.demog$HT, probability=TRUE, breaks=9, xaxt=&quot;n&quot; , main=&quot;Histogram for Height&quot;, xlab=&quot;Height (cm)&quot;, ylab=&quot;Probability (%)&quot; , col = &quot;lightblue&quot;, border = &quot;pink&quot;) axis(1, at=seq(min(d.demog$HT), max(d.demog$HT), 3)) lines(density(d.demog$HT)) ############## Box-Whisker Plot ################# # Box-and-Whisker Plot boxplot(d.demog$WT) boxplot(d.demog$WT ~ d.demog$SEX) boxplot(split(d.demog$WT, d.demog$SEX)) boxplot(WT ~ SEX, data=d.demog) boxplot(d.demog$WT ~ d.demog$SEX , names=c(&quot;Male&quot;,&quot;Female&quot;), ylab=&quot;AGE, year&quot;, ylim=c(min(d.demog$WT)-2, max(d.demog$WT)+2) , col=&quot;pink&quot;) boxplot(d.demog$WT ~ d.demog$SEX , names=c(&quot;Male&quot;,&quot;Female&quot;), ylab=&quot;AGE, year&quot;, ylim=c(min(d.demog$WT)-2, max(d.demog$WT)+2) , col=c(&quot;lightblue&quot;, &quot;salmon&quot;), width=c(0.6, 1)) #varwidth: if varwidth is TRUE, the boxes are drawn with widths proportional #to the square-roots of the number of observations in the groups. boxplot(d.demog$WT ~ d.demog$SEX , names=c(&quot;Male&quot;,&quot;Female&quot;), ylab=&quot;AGE, year&quot;, ylim=c(min(d.demog$WT)-2, max(d.demog$WT)+2) , col=c(&quot;lightblue&quot;, &quot;salmon&quot;) , varwidth=TRUE) ################## Bar Plot ##################### barplot(d.demog$HT) VADeaths barplot(VADeaths, border = &quot;dark blue&quot;) barplot(VADeaths, col = rainbow(20)) barplot(VADeaths, col = heat.colors(8)) barplot(VADeaths, col = gray.colors(4)) barplot(VADeaths, col = gray.colors(4), log=&quot;x&quot;) barplot(VADeaths, col = gray.colors(4), log=&quot;y&quot;) barplot(VADeaths, col = gray.colors(4), log=&quot;xy&quot;) ################## pie chart #################### drug.X.market &lt;- c(0.12, 0.29, 0.32, 0.22, 0.11, 0.28) names(drug.X.market) &lt;- c(&quot;South Korea&quot;,&quot;China&quot;,&quot;USA&quot;,&quot;Japan&quot;,&quot;Austria&quot;,&quot;EU&quot;) pie(drug.X.market) ################ matplot 함수 ################### # matrix와 column 사이의 그림 pct.95 &lt;- read.csv(&quot;pct95.csv&quot;) matplot(pct.95[,1], pct.95[,2:ncol(pct.95)], pch=1) matplot(pct.95[,1], pct.95[,2:ncol(pct.95)], pch=1, col=c(1,2,1), type=&quot;l&quot;, lty=1, lwd=c(1,2,1)) ###### Scatter plot matrices (pairs plots) ###### pairs(d.demog) #add a loess smoother, type: pairs(d.demog, panel = panel.smooth) panel.cor &lt;- function(x, y, digits=2, prefix=&quot;&quot;, cex.cor) { usr &lt;- par(&quot;usr&quot;); on.exit(par(usr)) par(usr = c(0, 1, 0, 1)) r = (cor(x, y)) txt &lt;- format(c(r, 0.123456789), digits=digits)[1] txt &lt;- paste(prefix, txt, sep=&quot;&quot;) if(missing(cex.cor)) cex &lt;- 1.5 text(0.5, 0.5, txt, cex = 1.5) } pairs(d.demog, lower.panel=panel.smooth, upper.panel=panel.cor) ################################################# ## 하위수준 그림 함수 ## ################################################# # points : 점추가 # lines : 선 추가 # abline : 기준선 추가 # mtext : 텍스트 추가 # legend : 설명(legend) 추가 # polygon : polygon 추가 ############ 점, 선, 설명 추가 하기 ############# plot(pct.95$TIME, pct.95$PCT50, main=&quot;PK of Drug X&quot; , type=&quot;l&quot;, xlab=&quot;Time (h)&quot;, ylab=&quot;Concentration (ng/ml)&quot; , ylim=range(0,80), lty=1, col=&quot;red&quot;, lwd=2) plot(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], main=&quot;PK of Drug X&quot; , type=&quot;n&quot;, xlab=&quot;Time (h)&quot;, ylab=&quot;Concentration (ng/ml)&quot; , ylim=range(0,80)) points(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], pch = 16, cex=0.8) lines(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], col=&quot;black&quot;, lwd=1) abline(40, 0, col=&quot;red&quot;, lty=2) #abline(a,b): y=a+b*x legend(&quot;topright&quot;, legend=c(&quot;Individual concentrations&quot;) , lty=1, col=&quot;black&quot;) ################# polygon 함수 ################### plot(c(1, 10), c(1, 6), type = &quot;n&quot;) polygon(c(2,8,8,2), c(5,4,3,2), col=&quot;lightgreen&quot;) plot(c(1, 9), 1:2, type = &quot;n&quot;) polygon(1:9, c(2,1,2,1,1,2,1,2,1), col = c(&quot;red&quot;, &quot;blue&quot;), border = c(&quot;green&quot;, &quot;yellow&quot;), lwd = 3, lty = c(&quot;dashed&quot;, &quot;solid&quot;)) ################# 그림 출력하기 ################## #--pdf graphics devices pdf(&quot;PK_of_Drug_X.pdf&quot;) plot(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], main=&quot;PK of Drug X&quot; , type=&quot;n&quot;, xlab=&quot;Time (h)&quot;, ylab=&quot;Concentration (ng/ml)&quot; , ylim=range(0,80)) points(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], pch = 16, cex=0.8) lines(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], col=&quot;black&quot;, lwd=1) abline(40, 0, col=&quot;red&quot;, lty=2) #abline(a,b): y=a+b*x legend(&quot;topright&quot;, legend=c(&quot;Individual concentrations&quot;) , lty=1, col=&quot;black&quot;) dev.off() #--PNG graphics devices png(&quot;PK_of_Drug_X.png&quot;) plot(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], main=&quot;PK of Drug X&quot; , type=&quot;n&quot;, xlab=&quot;Time (h)&quot;, ylab=&quot;Concentration (ng/ml)&quot; , ylim=range(0,80)) points(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], pch = 16, cex=0.8) lines(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], col=&quot;black&quot;, lwd=1) abline(40, 0, col=&quot;red&quot;, lty=2) #abline(a,b): y=a+b*x legend(&quot;topright&quot;, legend=c(&quot;Individual concentrations&quot;) , lty=1, col=&quot;black&quot;) dev.off() #--Windows graphics devices win.metafile(&quot;PK_of_Drug_X.wmf&quot;) plot(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], main=&quot;PK of Drug X&quot; , type=&quot;n&quot;, xlab=&quot;Time (h)&quot;, ylab=&quot;Concentration (ng/ml)&quot; , ylim=range(0,80)) points(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], pch = 16, cex=0.8) lines(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], col=&quot;black&quot;, lwd=1) abline(40, 0, col=&quot;red&quot;, lty=2) #abline(a,b): y=a+b*x legend(&quot;topright&quot;, legend=c(&quot;Individual concentrations&quot;) , lty=1, col=&quot;black&quot;) dev.off() B.2 Lecture 4 # 2017-03-29 setwd(&quot;D:/Rt&quot;) dir() mydata = read.csv(&quot;MyData2017.csv&quot;, as.is=TRUE) Theoph library(lattice) # trellis xyplot(conc ~ Time | Subject, data=Theoph) xyplot(conc ~ Time | Subject, data=Theoph, type=&quot;b&quot;) Theoph[,&quot;ID&quot;] = as.numeric(as.character(Theoph[,&quot;Subject&quot;])) xyplot(conc ~ Time | ID, data=Theoph, type=&quot;b&quot;) xyplot(conc ~ Time | as.factor(ID), data=Theoph, type=&quot;b&quot;) write.csv(Theoph, &quot;Theoph.csv&quot;, row.names=FALSE, quote=FALSE, na=&quot;&quot;) IDs = sort(unique(Theoph[,&quot;ID&quot;])) ; IDs nID = length(IDs) ; nID demog = unique(Theoph[,c(&quot;ID&quot;,&quot;Wt&quot;)]) colnames(demog) = c(&quot;ID&quot;, &quot;BWT&quot;) write.csv(demog, &quot;1-demog.csv&quot;, row.names=FALSE, quote=FALSE, na=&quot;&quot;) DV = Theoph[,c(&quot;ID&quot;,&quot;Time&quot;, &quot;conc&quot;)] colnames(DV) = c(&quot;ID&quot;, &quot;TIME&quot;, &quot;DV&quot;) write.csv(DV, &quot;3-DV.csv&quot;, row.names=FALSE, quote=FALSE, na=&quot;&quot;) adm = cbind(IDs, rep(0, nID), rep(320, nID)) colnames(adm) = c(&quot;ID&quot;, &quot;TIME&quot;, &quot;AMT&quot;) write.csv(adm, &quot;2-adm.csv&quot;, row.names=FALSE, quote=FALSE, na=&quot;&quot;) demog = read.csv(&quot;1-demog.csv&quot;, as.is=TRUE) adm = read.csv(&quot;2-adm.csv&quot;, as.is=TRUE) dv = read.csv(&quot;3-dv.csv&quot;, as.is=TRUE) AdmDv = merge(adm, dv, by=intersect(colnames(adm), colnames(dv)), all=TRUE) DataAll = merge(demog, AdmDv, by=c(&quot;ID&quot;), all=TRUE) B.3 Lecture 5 # 2017-04-05 R-intro.pdf Chapter 08 pois # ?dbeta dnorm(0) pnorm(0) 1 - pnorm(1.96) # ?pnorm pnorm(1.96, lower.tail=FALSE) qnorm(0.5) qnorm(0.975) format(qnorm(0.975), digits=22) rnorm(5) rnorm(5, 10, 1) x = rnorm(100, 10, 1) mean(x) sd(x) 2*pt(-2.43, df = 13) 2*pt(-2.43, df = 1000) qnorm(0.995) qf(0.01, 2, 7, lower.tail = FALSE) # ?fivenum faithful str(faithful) eruptions attach(faithful) eruptions waiting stem(waiting) sort(eruptions) hist(eruptions) hist(eruptions, seq(1.6, 5.2, 0.2), prob=TRUE) lines(density(eruptions, bw=0.1)) rug(eruptions) # ?hist # ?density lines(density(eruptions, bw=&quot;SJ&quot;), lty=3) plot(ecdf(eruptions), do.points=FALSE, verticals=TRUE) # ?plot ecdf(eruptions) x = ecdf(eruptions) x str(x) x() plot(ecdf(eruptions), do.points=FALSE) plot(ecdf(eruptions)) long &lt;- eruptions[eruptions &gt; 3] x &lt;- seq(3, 5.4, 0.01) pnorm(x, mean=mean(long), sd=sqrt(var(long))) # ?par x &lt;- rt(250, df = 5) qqnorm(x); qqline(x) curve(dnorm, -5, 5) y = density(x) lines(y, lty=3) # ?ppoints ppoints(250) ppoints(10) qqplot(qt(ppoints(250), df = 5), x, xlab = &quot;Q-Q plot for t dsn&quot;) windows() qqplot(qt(runif(250), df = 5), x, xlab = &quot;Q-Q plot for t dsn&quot;) # ?shapiro.test # ?ks.test # ?t.test A = c(79.98, 80.04, 80.02, 80.04, 80.03, 80.03, 80.04, 79.97, 80.05, 80.03, 80.02, 80.00, 80.02) B = c(80.02, 79.94, 79.98, 79.97, 79.97, 80.03, 79.95, 79.97) boxplot(A, B) t.test(A, B) var.test(A, B) t.test(A, B, var.equal=TRUE) wilcox.test(A, B) plot(ecdf(A), do.points=FALSE, verticals=TRUE, xlim=range(A, B)) plot(ecdf(B), do.points=FALSE, verticals=TRUE, add=TRUE) ks.test(A, B) # Chapter 9 Grouping, loops and conditional execution # { } does grouping # Usefulness of loops: for &gt;&gt; while &gt;&gt; repeat for (i in 1:10) { print(2*i) } for (i in 1:10) print(2*i) #while ( ) { ## Statements #} # # if ~ else ~ # if ( ) { # # Statements 1 # } else { # # Statements 2 # } # # if ( ) # Statement1 # else # Statement2 # # if ( ) { # # Statements 1 # } else if ( ) { # # Statements 2 # } else if ( ) { # # Statements 3 # } else { # # Statements 4 # } # # # Chapter 10 Writing your own functions Square = function(x=0) { return(x*x) } twosam = function(y1, y2) { n1 = length(y1) n2 = length(y2) yb1 = mean(y1) yb2 = mean(y2) s1 = var(y1) s2 = var(y2) s = ((n1 - 1)*s1 + (n2 - 1)*s2)/(n1 + n2 - 2) tst = (yb1 - yb2)/sqrt(s*(1/n1 + 1/n2)) return (tst) } x = rnorm(10) y = rt(10, 5) twosam(x, y) T.test = function(y1, y2) { n1 = length(y1) n2 = length(y2) yb1 = mean(y1) yb2 = mean(y2) s1 = var(y1) s2 = var(y2) s = ((n1 - 1)*s1 + (n2 - 1)*s2)/(n1 + n2 - 2) tst = (yb1 - yb2)/sqrt(s*(1/n1 + 1/n2)) DF = n1 + n2 - 2 p.val = 2*(1 - pt(abs(tst), df=DF)) Res = list(tst, DF, p.val, yb1, yb2) names(Res) = c(&quot;t&quot;, &quot;df&quot;, &quot;p-value&quot;, &quot;mean of x&quot;, &quot;mean of y&quot;) return (Res) } res = T.test(x, y) t.test(x, y) bslash = function(X, y) { X = qr(X) return (qr.coef(X, y)) } regcoeff = bslash(Xmat, yvar) &quot;%^%&quot; = function(S, pow) with(eigen(S), vectors %*% (abs(values)^pow * t(vectors))) M = matrix(c(2,1,1,2), nrow=2) ; M M %^% 0.5 sqrtM = M%^%0.5 ; sqrtM sqrtM %*% sqrtM area = function(f, a, b, eps=1.0e-06, lim=10) { fun1 = function(f, a, b, fa, fb, a0, eps, lim, fun) { ## function &#39;fun1’is only visible inside &#39;area’ d = (a + b)/2 h = (b - a)/4 fd = f(d) a1 = h * (fa + fd) a2 = h * (fd + fb) if (abs(a0 - a1 - a2) &lt; eps || lim == 0) return (a1 + a2) else { return (fun(f, a, d, fa, fd, a1, eps, lim - 1, fun) + fun(f, d, b, fd, fb, a2, eps, lim - 1, fun)) } } fa = f(a) fb = f(b) a0 = ((fa + fb) * (b - a))/2 fun1(f, a, b, fa, fb, a0, eps, lim, fun1) } area(dnorm, 0, 1) integrate(dnorm, 0, 1) pnorm(1) - pnorm(0) f = function(x) { y = 2*x print(x) print(y) print(z) } f(1) z = 3 f(1) cube = function(n) { sq = function() n*n n*sq() } cube(5) open.account = function(total) { list( deposit = function(amount) { if(amount &lt;= 0) stop(&quot;Deposits must be positive!\\n&quot;) total &lt;&lt;- total + amount cat(amount, &quot;deposited. Your balance is&quot;, total, &quot;\\n\\n&quot;) }, withdraw = function(amount) { if(amount &gt; total) stop(&quot;You don’t have that much money!\\n&quot;) total &lt;&lt;- total - amount cat(amount, &quot;withdrawn. Your balance is&quot;, total, &quot;\\n\\n&quot;) }, balance = function() { cat(&quot;Your balance is&quot;, total, &quot;\\n\\n&quot;) } ) } ross = open.account(100) robert = open.account(200) ross$balance() robert$balance() ross$deposit(50) ross$balance() ross$withdraw(500) # More basic keywords and functions 1 %in% c(1,2,3,4) 5 %in% c(1,2,3,4) is.finite(Inf) prod(1:3) cummax(1:10) cummax(10:1) # ?xor x = 11:20 x which(x==3) which(x==13) length(x) y = &quot;my string&quot; length(y) nchar(y) strsplit(y, &quot; &quot;) strsplit(y, &quot; &quot;)[[1]] substr(y, 4, 5) sample(1:10) sample(1:10, 20) sample(1:10, 20, replace=TRUE) sample(rep(1:10,2)) "],
["r-tips.html", "C R Tips C.1 Using Coursera", " C R Tips Handbook of statistical distributions with applications (Krishnamoorthy 2006) Materials https://cran.r-project.org/manuals.html https://cran.r-project.org/doc/manuals/r-release/R-intro.pdf Changing defualt R console size and etc : 배균섭 교수님께서 알려주신 tip을 참고하여 video clip을 만들었습니다. 매일같이 마주하게 되는 R console이 너무 작게 느껴지셨다면 다음의 동영상을 참고하셔서 초기 세팅 (Rconsole 파일)을 바꿔서 해결할 수 있습니다. https://youtu.be/uSunEN8W5Mo --> C.1 Using Coursera PAGK에 보낸 이메일을 그대로 옮겼습니다. 배균섭 교수님의 추천을 받아 다음과 같은 강의와 책을 공유하고자 합니다. Coursera.com 에 유익한 R 강좌가 열렸습니다. “Mastering Software Development in R Specialization”이란 제목의 강좌인데 4개 Course를 무료로 들을 수 있게 되어있습니다. https://www.coursera.org/specializations/r 이것이 본래의 Link인데 여기서 각각의 Course를 찾거나 혹은 아래의 링크를 각각 클릭하여 하단에 나오는 “Audit”을 클릭하면 무료로 들을 수 있습니다. Audit 버튼이 안보이신다고 하신 분들이 몇분 계셔서 첨언합니다. Coursera 회원가입하시고 로그인 한 뒤, Enroll Now를 누르시면 Audit 혹은 청강하기 라디오버튼을 보실 수 있습니다. 앱에서도 마찬가지입니다. 이외에도 코세라에는 많은 유익한 강의가 있는 것 같습니다. 다만 코스(Course)의 묶음인 “Specialization” 에서는 유료등록(Enroll) 밖에 없으므로 Certificate가 필요하지 않다면, 각각의 코스를 구글검색 혹은 코세라 내에서 검색해서 “Audit(청강)” 하시면 무료로 강의를 들을 수 있습니다. https://www.coursera.org/learn/r-programming-environment https://www.coursera.org/learn/advanced-r https://www.coursera.org/learn/r-packages https://www.coursera.org/learn/r-data-visualization https://bookdown.org/rdpeng/RProgDA/ 이 링크는 무료로 공개된 강의 책자입니다. 강의를 듣지 않고 책으로 보고 싶으신 분은 참고하시면 됩니다. References "],
["acknowledgement.html", "D Acknowledgement", " D Acknowledgement 이 웹북을 만드는데 도움을 주신 분들은 다음과 같습니다. Dr. Jekyll Hyde "],
["references.html", "References", " References "]
]
