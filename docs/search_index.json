[
["index.html", "R Programming - Lecture Notes Preface", " R Programming - Lecture Notes Kyun-Seop Bae, Sungpil Han 2017-04-05 Preface 안녕하십니까? 2017년 1학기 울산대학교 의학과 대학원 수업 R Programming 과목 담당교수 배균섭입니다. R은 http://cran.r-project.org 에서 다운로드받아 설치할 수 있습니다. 역시 같은 사이트에서 Manual이 나와 있으니 참고하시기 바랍니다. 구글에서 ‘R Programming pdf’와 같은 키워드로 검색하시면 많은 자료를 보실 수 있습니다. 첨부한 R.stx 파일은 AcroEdit이라는 editor에서 사용할 syntax highlighting용 구문 파일입니다. http://www.acrosoft.pe.kr 에서 다운로드 받아 설치하시기 바랍니다. AcroEdit대신 notepad++를 선호하시는 분은 그대로 사용하셔도 됩니다. 저는 RStudio, tinnR 등을 이용해서 강의하지 않습니다만, 필요하신 분은 쓰셔도 괜찮습니다. 향후 R package 작성을 위해서는 MiKTeX와 Rtools를 설치하십시오. 추가로 말씀드리자면, http://www.coursera.org 에 많은 R 강좌가 개설되어 있습니다. Specialization course로 들어가면 유로이지만, (Specialization course는 여러 개의 과목이 합쳐져 있는 것입니다.) 개별 과목을 검색해서 들어가면, 무료로도 볼 수 있습니다. (대신 시험을 칠 수 없거나, certificate를 받을 수 없습니다.) 좋은 강좌가 많으니 많이 활용하시기 바립니다. 강의 장소에 불편함이 많은 것으로 생각되어, 다음과 같이 Skype 모임을 개설하였습니다. 사정상 원거리에서 오시기 불편한 분들은 활용하시기 바랍니다. 출석은 화면을 캡쳐하거나 휴대폰으로 찍은 뒤 sec@acp.kr, shan@acp.kr로 보내주시면 출석으로 인정해 드립니다. Skype 모임 참가 https://meet.lync.com/uucp-acp/ksbae/SKGJ3BNQ 2017년 3월, 배균섭 배상 The online version of this book is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. Creative Commons License "],
["teaching-assistant.html", "Teaching Assistant", " Teaching Assistant 안녕하십니까? 서울아산병원 임상약리학과 전공의 한성필입니다. 수업과 관련된 여러 제반 업무를 담당하고 있습니다. 언제든 의문사항 있으면 r@acr.kr 로 전체 메일 보내시거나 교수님 k@acr.kr 혹은 제 개인 메일 shan@acp.kr로 연락해 주십시오. 교수님께서 세우신 방침에 따라 수업시간에 출석을 부르지 않을 예정입니다. 수강하시는 화면(Skype)을 휴대폰으로 사진 찍으시거나 강의실의 스크린을 사진으로 촬영하셔서 sec@acp.kr / shan@acp.kr 로 동시에 보내주시면 됩니다. 가급적 “2017-03-31 한성필 출석” 과 같은 식의 제목을 유지해 주시면 처리하는데 큰 도움이 될 것 같습니다. 출석 체크를 위해 전체메일을 사용하지 말아주십시오! 아울러 수업 중에 사용한 코드/스크립트를 사용하여 R의 패키지인 bookdown을 사용해 웹북을 제작 중에 있습니다. (Xie 2016) 여러분이 읽고 있는 이 책 자체가 R 코드의 일종인 Rmarkdown의 결과물이라고 보시면 됩니다. Github 저장소가 있으니 소스 코드를 보실 수 있습니다. 누구나 소스를 편집하여 Pull Request를 요청할 수 있으므로 혹시 Github를 사용하셔서 웹북의 질을 높이고자 하시는 수강생 선생님들께서는 도움을 주십시오. 감사합니다. 2017년 3월, 한성필 올림 References "],
["faq.html", "FAQ", " FAQ 접속 관련 Q. 스카이프를 한번도 안써봐서 이참에 사용법을 배우고있는데, 수업시작시에 상대방을 어떻게 검색해서 들어가면 될지 알려주시면 감사하겠습니다. Q. 온라인 수강시 접속하는 스카이프 주소는 무엇인지요? https://meet.lync.com/uucp-acp/ksbae/SKGJ3BNQ Chrome 등 웹브라우저에서 위 주소를 입력하면 직접 대화방으로 연결됩니다. (검색할 필요 없습니다.) 처음 설치시에는 Add-on이 설치될 수 있습니다. MacOS Sierra, Win7, Win10에서 Chrome, Internet Explorer 등을 사용하여 테스트해 보았고 모두 잘 동작하였습니다. 대부분의 경우 Skype For Business 계정이 없을 것으로 생각되는데 따로 로그인할 필요 없습니다. 수업 시작 30분 전부터 대화방을 개설해 놓도록 하겠습니다. https://groups.google.com/a/acr.kr/d/msg/r/nUkrE37W2kQ/waG-FkM_BgAJ 교수님께서 처음 보낸 메일을 참고해 주십시오. Q. 앞으로 수업은 지난 첫수업처럼 계속 온라인 수강이 가능한 것인가요? 네, 계속 온라인으로 가능합니다. Q. 저도 웹캠을 설치하여야 하여야 하나요? 설치할 필요 없습니다. 오히려 수강자의 웹캠의 전원을 꺼두시길 권고드립니다. Q. 수강전 온라인 강의 테스트 해볼 수 있나요? 수업 시작 30분 전부터 대화방을 개설하여 놓도록 하겠습니다. 출석관련 Q. 미국학회 참석으로 수업시간이 귀국행 비행기 기내에 있을거같아 출석이 안될것 같습니다. 방법이 있을지요? 결석 사유서를 제출해 주시면 출석 처리 하겠습니다. 대학원 홈페이지 참고 바랍니다. 이 링크로 들어가시면 가장 위에 있습니다. (결석사유서.hwp) 참고로 수업 영상은 녹화하여 Youtube에 비공개 링크를 만들 예정이라서 추후에 관련 영상을 시청할 수 있을 것 같습니다. 결석사유서를 제출한다고 100% 출석이 인정되는 것은 아닙니다. 이것이 기본적으로는 offline강의이기 때문에 강의시간에 강의실에 있든지, 또는 온라인으로 접속해 있어야 합니다. 출석사유서를 제출하거나, 추후 동영상 시청을 해서 그 증거(사진)을 제출하는 경우에 감점을 줄여드릴 수 있습니다. 예를 들어, 결석시에는 2점 감점인데, 결석사유서를 제출하면 1점만 감점한다는지, 동영상을 보면 0.5점만 감점한다는지 하는 것입니다. 결석 사유서 제출 시 출석 처리 원칙에 대한 설명을 드리오니, 참고하시길 바랍니다. 과제 관련 Q. 과제물이 있다고 들었는데 언제 assign하게 되는지요? 과제물은 빨라야 5주차 이후에 나갑니다. Coursera 관련 Q. 첫 수업 때, certification 관련 말씀을 하셨는데, 정확히 coursera 사이트에서 어떤 것을 듣고, 제출을 해야하는지 궁금합니다. (비슷한 내용이 많아, 어떤것을 들어야하는지 헷갈립니다.) Coursera는 꼭 어느 것을 들어야 하는 것은 아니고, R programming과 관련된 것이라면 자유로이 골라서 들으면 됩니다. 대표적인 두 가지만 들자면 다음과 같습니다. https://www.coursera.org/learn/r-programming https://www.coursera.org/learn/r-programming-environment Q. Coursera 강의를 듣고 증명서를 내면 출석을 얼마나 커버할 수 있을런지요? Coursera는 출석 커버보다는 grade를 올려 주기 위한 것입니다. 출석은 Skype로 커버해야 합니다. 출석의 성적 반영비율은 25%이지만, 규정상 4회 이상 결석이면 성적이 나갈 수 없습니다. "],
["syllabus.html", "Syllabus", " Syllabus Syllabus page 1 Syllabus page 2 -->"],
["r-language.html", "Chapter 1 R language", " Chapter 1 R language 2017-03-15 배균섭 교수님 강의 R Language Definition의 초반 내용에 대해 설명하였습니다. "],
["graphics.html", "Chapter 2 Graphics", " Chapter 2 Graphics 2017-03-22 임형석 교수님 강의 R을 사용해 그림 그리는 방법에 대해 알아보겠습니다. "],
["introduction.html", "2.1 Introduction", " 2.1 Introduction 상위수준 그림 함수는 그림을 생성한다. 하위수준 그림 함수는 기존의 그림에 그림을 추가한다. "],
["upper.html", "2.2 상위수준 그림 함수", " 2.2 상위수준 그림 함수 2.2.1 상위수준 그림 함수의 주요 인자 (arguments) main : 제목 xlab/ylab : x축 및 y축 레이블 xlim/ylim : x축 및 y축 범위 col : 색깔 lty : 선 모양 pch : 점 모양 cex : 그림 성분의 크기 lwd : 선 굵기 type : 그림 타입 dta &lt;- read.csv(&quot;PK.csv&quot;) head(dta) ## ID TIME AMT DV MDV ## 1 1 0.00 0 0.00 0 ## 2 1 0.00 4 0.00 1 ## 3 1 0.33 0 9.40 0 ## 4 1 0.66 0 13.71 0 ## 5 1 1.00 0 16.52 0 ## 6 1 1.50 0 29.36 0 str(dta) ## &#39;data.frame&#39;: 456 obs. of 5 variables: ## $ ID : num 1 1 1 1 1 1 1 1 1 1 ... ## $ TIME: num 0 0 0.33 0.66 1 1.5 2 3 4 6 ... ## $ AMT : num 0 4 0 0 0 0 0 0 0 0 ... ## $ DV : num 0 0 9.4 13.7 16.5 ... ## $ MDV : num 0 1 0 0 0 0 0 0 0 0 ... 2.2.2 scatter plot plot(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0]) plot(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], log=&quot;y&quot;) ## Warning in xy.coords(x, y, xlabel, ylabel, log): 86 y ## values &lt;= 0 omitted from logarithmic plot plot(dta$TIME[dta$MDV==0], log(dta$DV[dta$MDV==0])) plot(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0] , xlab=&quot;Time (hr)&quot;, ylab=&quot;Concentration (ng/mL)&quot; , type=&quot;o&quot;, pch=2, col=1, main=&quot;PK time-course of Drug X&quot; , xlim =c(-2,218), ylim=c(0,80)) plot(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], axes=F, , xlab=&quot;Time (hr)&quot;, ylab=&quot;Concentration (ng/mL)&quot; , type=&quot;o&quot;, pch=2, col=1, main=&quot;PK time-course of Drug X&quot; , xlim =c(-2,218), ylim=c(0,80)) axis(1, at=seq(0, 218, 24)) axis(2) box() 2.2.3 Histogram d.demog &lt;- read.csv(&quot;DEMOG.csv&quot;) hist(d.demog$HT) hist(d.demog$HT, breaks=10) hist(d.demog$HT, nclass=10) 2.2.3.1 with density line hist (d.demog$HT, probability=TRUE, breaks=10) lines(density(d.demog$HT)) hist (d.demog$HT, probability=TRUE, breaks=9, xaxt=&quot;n&quot; , main=&quot;Histogram for Height&quot;, xlab=&quot;Height (cm)&quot;, ylab=&quot;Probability (%)&quot;) axis(1, at=seq(min(d.demog$HT), max(d.demog$HT), 3)) lines(density(d.demog$HT)) hist (d.demog$HT, probability=TRUE, breaks=9, xaxt=&quot;n&quot; , main=&quot;Histogram for Height&quot;, xlab=&quot;Height (cm)&quot;, ylab=&quot;Probability (%)&quot; , col = &quot;lightblue&quot;, border = &quot;pink&quot;) axis(1, at=seq(min(d.demog$HT), max(d.demog$HT), 3)) lines(density(d.demog$HT)) 2.2.4 Box-Whisker Plot boxplot(d.demog$WT) boxplot(d.demog$WT ~ d.demog$SEX) boxplot(split(d.demog$WT, d.demog$SEX)) boxplot(WT ~ SEX, data=d.demog) boxplot(d.demog$WT ~ d.demog$SEX , names=c(&quot;Male&quot;,&quot;Female&quot;), ylab=&quot;AGE, year&quot;, ylim=c(min(d.demog$WT)-2, max(d.demog$WT)+2) , col=&quot;pink&quot;) boxplot(d.demog$WT ~ d.demog$SEX , names=c(&quot;Male&quot;,&quot;Female&quot;), ylab=&quot;AGE, year&quot;, ylim=c(min(d.demog$WT)-2, max(d.demog$WT)+2) , col=c(&quot;lightblue&quot;, &quot;salmon&quot;), width=c(0.6, 1)) -varwidth: if varwidth is TRUE, the boxes are drawn with widths proportional to the square-roots of the number of observations in the groups. boxplot(d.demog$WT ~ d.demog$SEX , names=c(&quot;Male&quot;,&quot;Female&quot;), ylab=&quot;AGE, year&quot;, ylim=c(min(d.demog$WT)-2, max(d.demog$WT)+2) , col=c(&quot;lightblue&quot;, &quot;salmon&quot;) , varwidth=TRUE) 2.2.5 Bar Plot barplot(d.demog$HT) VADeaths ## Rural Male Rural Female Urban Male Urban Female ## 50-54 11.7 8.7 15.4 8.4 ## 55-59 18.1 11.7 24.3 13.6 ## 60-64 26.9 20.3 37.0 19.3 ## 65-69 41.0 30.9 54.6 35.1 ## 70-74 66.0 54.3 71.1 50.0 barplot(VADeaths, border = &quot;dark blue&quot;) barplot(VADeaths, col = rainbow(20)) barplot(VADeaths, col = heat.colors(8)) barplot(VADeaths, col = gray.colors(4)) barplot(VADeaths, col = gray.colors(4), log=&quot;x&quot;) barplot(VADeaths, col = gray.colors(4), log=&quot;y&quot;) barplot(VADeaths, col = gray.colors(4), log=&quot;xy&quot;) 2.2.6 pie chart drug.X.market &lt;- c(0.12, 0.29, 0.32, 0.22, 0.11, 0.28) names(drug.X.market) &lt;- c(&quot;South Korea&quot;,&quot;China&quot;,&quot;USA&quot;,&quot;Japan&quot;,&quot;Austria&quot;,&quot;EU&quot;) pie(drug.X.market) 2.2.7 matplot 함수 2.2.7.1 matrix와 column 사이의 그림 pct.95 &lt;- read.csv(&quot;pct95.csv&quot;) matplot(pct.95[,1], pct.95[,2:ncol(pct.95)], pch=1) matplot(pct.95[,1], pct.95[,2:ncol(pct.95)], pch=1, col=c(1,2,1), type=&quot;l&quot;, lty=1, lwd=c(1,2,1)) 2.2.8 Scatter plot matrices (pairs plots) pairs(d.demog) 2.2.8.1 add a loess smoother, type pairs(d.demog, panel = panel.smooth) panel.cor &lt;- function(x, y, digits=2, prefix=&quot;&quot;, cex.cor) { usr &lt;- par(&quot;usr&quot;); on.exit(par(usr)) par(usr = c(0, 1, 0, 1)) r = (cor(x, y)) txt &lt;- format(c(r, 0.123456789), digits=digits)[1] txt &lt;- paste(prefix, txt, sep=&quot;&quot;) if(missing(cex.cor)) cex &lt;- 1.5 text(0.5, 0.5, txt, cex = 1.5) } pairs(d.demog, lower.panel=panel.smooth, upper.panel=panel.cor) "],
["lower.html", "2.3 하위수준 그림 함수", " 2.3 하위수준 그림 함수 points : 점추가 lines : 선 추가 abline : 기준선 추가 mtext : 텍스트 추가 legend : 설명(legend) 추가 polygon : polygon 추가 2.3.1 점, 선, 설명 추가 하기 {add} plot(pct.95$TIME, pct.95$PCT50, main=&quot;PK of Drug X&quot; , type=&quot;l&quot;, xlab=&quot;Time (h)&quot;, ylab=&quot;Concentration (ng/ml)&quot; , ylim=range(0,80), lty=1, col=&quot;red&quot;, lwd=2) plot(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], main=&quot;PK of Drug X&quot; , type=&quot;n&quot;, xlab=&quot;Time (h)&quot;, ylab=&quot;Concentration (ng/ml)&quot; , ylim=range(0,80)) points(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], pch = 16, cex=0.8) lines(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], col=&quot;black&quot;, lwd=1) abline(40, 0, col=&quot;red&quot;, lty=2) # abline(a,b): y=a+b*x legend(&quot;topright&quot;, legend=c(&quot;Individual concentrations&quot;) , lty=1, col=&quot;black&quot;) 2.3.2 polygon 함수 plot(c(1, 10), c(1, 6), type = &quot;n&quot;) polygon(c(2,8,8,2), c(5,4,3,2), col=&quot;lightgreen&quot;) plot(c(1, 9), 1:2, type = &quot;n&quot;) polygon(1:9, c(2,1,2,1,1,2,1,2,1), col = c(&quot;red&quot;, &quot;blue&quot;), border = c(&quot;green&quot;, &quot;yellow&quot;), lwd = 3, lty = c(&quot;dashed&quot;, &quot;solid&quot;)) "],
["print.html", "2.4 그림 출력하기", " 2.4 그림 출력하기 2.4.1 pdf graphics devices pdf(&quot;PK_of_Drug_X.pdf&quot;) plot(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], main=&quot;PK of Drug X&quot; , type=&quot;n&quot;, xlab=&quot;Time (h)&quot;, ylab=&quot;Concentration (ng/ml)&quot; , ylim=range(0,80)) points(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], pch = 16, cex=0.8) lines(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], col=&quot;black&quot;, lwd=1) abline(40, 0, col=&quot;red&quot;, lty=2) #abline(a,b): y=a+b*x legend(&quot;topright&quot;, legend=c(&quot;Individual concentrations&quot;) , lty=1, col=&quot;black&quot;) dev.off() ## pdf ## 2 2.4.2 PNG graphics devices png(&quot;PK_of_Drug_X.png&quot;) plot(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], main=&quot;PK of Drug X&quot; , type=&quot;n&quot;, xlab=&quot;Time (h)&quot;, ylab=&quot;Concentration (ng/ml)&quot; , ylim=range(0,80)) points(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], pch = 16, cex=0.8) lines(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], col=&quot;black&quot;, lwd=1) abline(40, 0, col=&quot;red&quot;, lty=2) #abline(a,b): y=a+b*x legend(&quot;topright&quot;, legend=c(&quot;Individual concentrations&quot;) , lty=1, col=&quot;black&quot;) dev.off() ## pdf ## 2 -->"],
["data-import-export.html", "Chapter 3 Data Import / Export", " Chapter 3 Data Import / Export 2017-03-29 배균섭 교수님 강의 이번 시간에는 자료를 불러오고 조작을 가한 뒤 저장하는 방법에 대해 알아보겠습니다. "],
["read-csv.html", "3.1 Read.csv", " 3.1 Read.csv setwd 명령어를 통해서 자료가 있는 작업 공간을 설정할 수 있습니다. 설정 후에서는 dir()을 통해 파일의 이름을 확인 할 수 있습니다. read.csv를 통해서 자료를 R에서 사용할 수 있게 됩니다. setwd(&quot;D:/Rt&quot;) dir() mydata &lt;- read.csv(&quot;MyData2017.csv&quot;, as.is=TRUE) "],
["theoph-.html", "3.2 Theoph 데이타", " 3.2 Theoph 데이타 R에 기본적으로 들어있는 Theoph 약동학 자료에 대해 살펴보겠습니다. head(Theoph, n = 11) ## Subject Wt Dose Time conc ## 1 1 79.6 4.02 0.00 0.74 ## 2 1 79.6 4.02 0.25 2.84 ## 3 1 79.6 4.02 0.57 6.57 ## 4 1 79.6 4.02 1.12 10.50 ## 5 1 79.6 4.02 2.02 9.66 ## 6 1 79.6 4.02 3.82 8.58 ## 7 1 79.6 4.02 5.10 8.36 ## 8 1 79.6 4.02 7.03 7.47 ## 9 1 79.6 4.02 9.05 6.89 ## 10 1 79.6 4.02 12.12 5.94 ## 11 1 79.6 4.02 24.37 3.28 tail(Theoph, n = 11) ## Subject Wt Dose Time conc ## 122 12 60.5 5.3 0.00 0.00 ## 123 12 60.5 5.3 0.25 1.25 ## 124 12 60.5 5.3 0.50 3.96 ## 125 12 60.5 5.3 1.00 7.82 ## 126 12 60.5 5.3 2.00 9.72 ## 127 12 60.5 5.3 3.52 9.75 ## 128 12 60.5 5.3 5.07 8.57 ## 129 12 60.5 5.3 7.07 6.59 ## 130 12 60.5 5.3 9.03 6.11 ## 131 12 60.5 5.3 12.05 4.57 ## 132 12 60.5 5.3 24.15 1.17 R console에서 ?Theoph를 타이핑 치면 좀 더 자세한 정보를 얻을 수 있습니다. "],
["lattice.html", "3.3 lattice", " 3.3 lattice lattice 패키지를 불러온 뒤 그림을 그려보겠습니다. (Sarkar 2017) library(lattice) # trellis xyplot(conc ~ Time | Subject, data=Theoph) xyplot(conc ~ Time | Subject, data=Theoph, type=&quot;b&quot;) Theoph[,&quot;ID&quot;] = as.numeric(as.character(Theoph[,&quot;Subject&quot;])) xyplot(conc ~ Time | ID, data=Theoph, type=&quot;b&quot;) xyplot(conc ~ Time | as.factor(ID), data=Theoph, type=&quot;b&quot;) write.csv(Theoph, &quot;Theoph.csv&quot;, row.names=FALSE, quote=FALSE, na=&quot;&quot;) References "],
["subseting-and-write-csv.html", "3.4 Subseting and write.csv", " 3.4 Subseting and write.csv 자료를 편집하고, subset을 만들고 각각을 파일로 저장하는 방법에 대해 알아보겠습니다. IDs = sort(unique(Theoph[,&quot;ID&quot;])) ; IDs ## [1] 1 2 3 4 5 6 7 8 9 10 11 12 nID = length(IDs) ; nID ## [1] 12 demog = unique(Theoph[,c(&quot;ID&quot;,&quot;Wt&quot;)]) colnames(demog) = c(&quot;ID&quot;, &quot;BWT&quot;) write.csv(demog, &quot;1-demog.csv&quot;, row.names=FALSE, quote=FALSE, na=&quot;&quot;) DV = Theoph[,c(&quot;ID&quot;,&quot;Time&quot;, &quot;conc&quot;)] colnames(DV) = c(&quot;ID&quot;, &quot;TIME&quot;, &quot;DV&quot;) write.csv(DV, &quot;3-DV.csv&quot;, row.names=FALSE, quote=FALSE, na=&quot;&quot;) adm = cbind(IDs, rep(0, nID), rep(320, nID)) colnames(adm) = c(&quot;ID&quot;, &quot;TIME&quot;, &quot;AMT&quot;) write.csv(adm, &quot;2-adm.csv&quot;, row.names=FALSE, quote=FALSE, na=&quot;&quot;) demog = read.csv(&quot;1-demog.csv&quot;, as.is=TRUE) adm = read.csv(&quot;2-adm.csv&quot;, as.is=TRUE) dv = read.csv(&quot;3-dv.csv&quot;, as.is=TRUE) AdmDv = merge(adm, dv, by=intersect(colnames(adm), colnames(dv)), all=TRUE) AdmDv ## ID TIME AMT DV ## 1 1 0.00 320 0.74 ## 2 1 0.25 NA 2.84 ## 3 1 0.57 NA 6.57 ## 4 1 1.12 NA 10.50 ## 5 1 2.02 NA 9.66 ## 6 1 3.82 NA 8.58 ## 7 1 5.10 NA 8.36 ## 8 1 7.03 NA 7.47 ## 9 1 9.05 NA 6.89 ## 10 1 12.12 NA 5.94 ## 11 1 24.37 NA 3.28 ## 12 2 0.00 320 0.00 ## 13 2 0.27 NA 1.72 ## 14 2 0.52 NA 7.91 ## 15 2 1.00 NA 8.31 ## 16 2 1.92 NA 8.33 ## 17 2 3.50 NA 6.85 ## 18 2 5.02 NA 6.08 ## 19 2 7.03 NA 5.40 ## 20 2 9.00 NA 4.55 ## 21 2 12.00 NA 3.01 ## 22 2 24.30 NA 0.90 ## 23 3 0.00 320 0.00 ## 24 3 0.27 NA 4.40 ## 25 3 0.58 NA 6.90 ## 26 3 1.02 NA 8.20 ## 27 3 2.02 NA 7.80 ## 28 3 3.62 NA 7.50 ## 29 3 5.08 NA 6.20 ## 30 3 7.07 NA 5.30 ## 31 3 9.00 NA 4.90 ## 32 3 12.15 NA 3.70 ## 33 3 24.17 NA 1.05 ## 34 4 0.00 320 0.00 ## 35 4 0.35 NA 1.89 ## 36 4 0.60 NA 4.60 ## 37 4 1.07 NA 8.60 ## 38 4 2.13 NA 8.38 ## 39 4 3.50 NA 7.54 ## 40 4 5.02 NA 6.88 ## 41 4 7.02 NA 5.78 ## 42 4 9.02 NA 5.33 ## 43 4 11.98 NA 4.19 ## 44 4 24.65 NA 1.15 ## 45 5 0.00 320 0.00 ## 46 5 0.30 NA 2.02 ## 47 5 0.52 NA 5.63 ## 48 5 1.00 NA 11.40 ## 49 5 2.02 NA 9.33 ## 50 5 3.50 NA 8.74 ## 51 5 5.02 NA 7.56 ## 52 5 7.02 NA 7.09 ## 53 5 9.10 NA 5.90 ## 54 5 12.00 NA 4.37 ## 55 5 24.35 NA 1.57 ## 56 6 0.00 320 0.00 ## 57 6 0.27 NA 1.29 ## 58 6 0.58 NA 3.08 ## 59 6 1.15 NA 6.44 ## 60 6 2.03 NA 6.32 ## 61 6 3.57 NA 5.53 ## 62 6 5.00 NA 4.94 ## 63 6 7.00 NA 4.02 ## 64 6 9.22 NA 3.46 ## 65 6 12.10 NA 2.78 ## 66 6 23.85 NA 0.92 ## 67 7 0.00 320 0.15 ## 68 7 0.25 NA 0.85 ## 69 7 0.50 NA 2.35 ## 70 7 1.02 NA 5.02 ## 71 7 2.02 NA 6.58 ## 72 7 3.48 NA 7.09 ## 73 7 5.00 NA 6.66 ## 74 7 6.98 NA 5.25 ## 75 7 9.00 NA 4.39 ## 76 7 12.05 NA 3.53 ## 77 7 24.22 NA 1.15 ## 78 8 0.00 320 0.00 ## 79 8 0.25 NA 3.05 ## 80 8 0.52 NA 3.05 ## 81 8 0.98 NA 7.31 ## 82 8 2.02 NA 7.56 ## 83 8 3.53 NA 6.59 ## 84 8 5.05 NA 5.88 ## 85 8 7.15 NA 4.73 ## 86 8 9.07 NA 4.57 ## 87 8 12.10 NA 3.00 ## 88 8 24.12 NA 1.25 ## 89 9 0.00 320 0.00 ## 90 9 0.30 NA 7.37 ## 91 9 0.63 NA 9.03 ## 92 9 1.05 NA 7.14 ## 93 9 2.02 NA 6.33 ## 94 9 3.53 NA 5.66 ## 95 9 5.02 NA 5.67 ## 96 9 7.17 NA 4.24 ## 97 9 8.80 NA 4.11 ## 98 9 11.60 NA 3.16 ## 99 9 24.43 NA 1.12 ## 100 10 0.00 320 0.24 ## 101 10 0.37 NA 2.89 ## 102 10 0.77 NA 5.22 ## 103 10 1.02 NA 6.41 ## 104 10 2.05 NA 7.83 ## 105 10 3.55 NA 10.21 ## 106 10 5.05 NA 9.18 ## 107 10 7.08 NA 8.02 ## 108 10 9.38 NA 7.14 ## 109 10 12.10 NA 5.68 ## 110 10 23.70 NA 2.42 ## 111 11 0.00 320 0.00 ## 112 11 0.25 NA 4.86 ## 113 11 0.50 NA 7.24 ## 114 11 0.98 NA 8.00 ## 115 11 1.98 NA 6.81 ## 116 11 3.60 NA 5.87 ## 117 11 5.02 NA 5.22 ## 118 11 7.03 NA 4.45 ## 119 11 9.03 NA 3.62 ## 120 11 12.12 NA 2.69 ## 121 11 24.08 NA 0.86 ## 122 12 0.00 320 0.00 ## 123 12 0.25 NA 1.25 ## 124 12 0.50 NA 3.96 ## 125 12 1.00 NA 7.82 ## 126 12 2.00 NA 9.72 ## 127 12 3.52 NA 9.75 ## 128 12 5.07 NA 8.57 ## 129 12 7.07 NA 6.59 ## 130 12 9.03 NA 6.11 ## 131 12 12.05 NA 4.57 ## 132 12 24.15 NA 1.17 자료를 병합(merge)해 보겠습니다. DataAll = merge(demog, AdmDv, by=c(&quot;ID&quot;), all=TRUE) DataAll ## ID BWT TIME AMT DV ## 1 1 79.6 0.00 320 0.74 ## 2 1 79.6 0.25 NA 2.84 ## 3 1 79.6 0.57 NA 6.57 ## 4 1 79.6 1.12 NA 10.50 ## 5 1 79.6 2.02 NA 9.66 ## 6 1 79.6 3.82 NA 8.58 ## 7 1 79.6 5.10 NA 8.36 ## 8 1 79.6 7.03 NA 7.47 ## 9 1 79.6 9.05 NA 6.89 ## 10 1 79.6 12.12 NA 5.94 ## 11 1 79.6 24.37 NA 3.28 ## 12 2 72.4 0.00 320 0.00 ## 13 2 72.4 0.27 NA 1.72 ## 14 2 72.4 0.52 NA 7.91 ## 15 2 72.4 1.00 NA 8.31 ## 16 2 72.4 1.92 NA 8.33 ## 17 2 72.4 3.50 NA 6.85 ## 18 2 72.4 5.02 NA 6.08 ## 19 2 72.4 7.03 NA 5.40 ## 20 2 72.4 9.00 NA 4.55 ## 21 2 72.4 12.00 NA 3.01 ## 22 2 72.4 24.30 NA 0.90 ## 23 3 70.5 0.00 320 0.00 ## 24 3 70.5 0.27 NA 4.40 ## 25 3 70.5 0.58 NA 6.90 ## 26 3 70.5 1.02 NA 8.20 ## 27 3 70.5 2.02 NA 7.80 ## 28 3 70.5 3.62 NA 7.50 ## 29 3 70.5 5.08 NA 6.20 ## 30 3 70.5 7.07 NA 5.30 ## 31 3 70.5 9.00 NA 4.90 ## 32 3 70.5 12.15 NA 3.70 ## 33 3 70.5 24.17 NA 1.05 ## 34 4 72.7 0.00 320 0.00 ## 35 4 72.7 0.35 NA 1.89 ## 36 4 72.7 0.60 NA 4.60 ## 37 4 72.7 1.07 NA 8.60 ## 38 4 72.7 2.13 NA 8.38 ## 39 4 72.7 3.50 NA 7.54 ## 40 4 72.7 5.02 NA 6.88 ## 41 4 72.7 7.02 NA 5.78 ## 42 4 72.7 9.02 NA 5.33 ## 43 4 72.7 11.98 NA 4.19 ## 44 4 72.7 24.65 NA 1.15 ## 45 5 54.6 0.00 320 0.00 ## 46 5 54.6 0.30 NA 2.02 ## 47 5 54.6 0.52 NA 5.63 ## 48 5 54.6 1.00 NA 11.40 ## 49 5 54.6 2.02 NA 9.33 ## 50 5 54.6 3.50 NA 8.74 ## 51 5 54.6 5.02 NA 7.56 ## 52 5 54.6 7.02 NA 7.09 ## 53 5 54.6 9.10 NA 5.90 ## 54 5 54.6 12.00 NA 4.37 ## 55 5 54.6 24.35 NA 1.57 ## 56 6 80.0 0.00 320 0.00 ## 57 6 80.0 0.27 NA 1.29 ## 58 6 80.0 0.58 NA 3.08 ## 59 6 80.0 1.15 NA 6.44 ## 60 6 80.0 2.03 NA 6.32 ## 61 6 80.0 3.57 NA 5.53 ## 62 6 80.0 5.00 NA 4.94 ## 63 6 80.0 7.00 NA 4.02 ## 64 6 80.0 9.22 NA 3.46 ## 65 6 80.0 12.10 NA 2.78 ## 66 6 80.0 23.85 NA 0.92 ## 67 7 64.6 0.00 320 0.15 ## 68 7 64.6 0.25 NA 0.85 ## 69 7 64.6 0.50 NA 2.35 ## 70 7 64.6 1.02 NA 5.02 ## 71 7 64.6 2.02 NA 6.58 ## 72 7 64.6 3.48 NA 7.09 ## 73 7 64.6 5.00 NA 6.66 ## 74 7 64.6 6.98 NA 5.25 ## 75 7 64.6 9.00 NA 4.39 ## 76 7 64.6 12.05 NA 3.53 ## 77 7 64.6 24.22 NA 1.15 ## 78 8 70.5 0.00 320 0.00 ## 79 8 70.5 0.25 NA 3.05 ## 80 8 70.5 0.52 NA 3.05 ## 81 8 70.5 0.98 NA 7.31 ## 82 8 70.5 2.02 NA 7.56 ## 83 8 70.5 3.53 NA 6.59 ## 84 8 70.5 5.05 NA 5.88 ## 85 8 70.5 7.15 NA 4.73 ## 86 8 70.5 9.07 NA 4.57 ## 87 8 70.5 12.10 NA 3.00 ## 88 8 70.5 24.12 NA 1.25 ## 89 9 86.4 0.00 320 0.00 ## 90 9 86.4 0.30 NA 7.37 ## 91 9 86.4 0.63 NA 9.03 ## 92 9 86.4 1.05 NA 7.14 ## 93 9 86.4 2.02 NA 6.33 ## 94 9 86.4 3.53 NA 5.66 ## 95 9 86.4 5.02 NA 5.67 ## 96 9 86.4 7.17 NA 4.24 ## 97 9 86.4 8.80 NA 4.11 ## 98 9 86.4 11.60 NA 3.16 ## 99 9 86.4 24.43 NA 1.12 ## 100 10 58.2 0.00 320 0.24 ## 101 10 58.2 0.37 NA 2.89 ## 102 10 58.2 0.77 NA 5.22 ## 103 10 58.2 1.02 NA 6.41 ## 104 10 58.2 2.05 NA 7.83 ## 105 10 58.2 3.55 NA 10.21 ## 106 10 58.2 5.05 NA 9.18 ## 107 10 58.2 7.08 NA 8.02 ## 108 10 58.2 9.38 NA 7.14 ## 109 10 58.2 12.10 NA 5.68 ## 110 10 58.2 23.70 NA 2.42 ## 111 11 65.0 0.00 320 0.00 ## 112 11 65.0 0.25 NA 4.86 ## 113 11 65.0 0.50 NA 7.24 ## 114 11 65.0 0.98 NA 8.00 ## 115 11 65.0 1.98 NA 6.81 ## 116 11 65.0 3.60 NA 5.87 ## 117 11 65.0 5.02 NA 5.22 ## 118 11 65.0 7.03 NA 4.45 ## 119 11 65.0 9.03 NA 3.62 ## 120 11 65.0 12.12 NA 2.69 ## 121 11 65.0 24.08 NA 0.86 ## 122 12 60.5 0.00 320 0.00 ## 123 12 60.5 0.25 NA 1.25 ## 124 12 60.5 0.50 NA 3.96 ## 125 12 60.5 1.00 NA 7.82 ## 126 12 60.5 2.00 NA 9.72 ## 127 12 60.5 3.52 NA 9.75 ## 128 12 60.5 5.07 NA 8.57 ## 129 12 60.5 7.07 NA 6.59 ## 130 12 60.5 9.03 NA 6.11 ## 131 12 60.5 12.05 NA 4.57 ## 132 12 60.5 24.15 NA 1.17 -->"],
["frequently-used-functions.html", "Chapter 4 Frequently Used Functions", " Chapter 4 Frequently Used Functions 2017-04-05 배균섭 교수님 강의 자주 쓰는 함수 및 명령어에 대해 알아보겠습니다. "],
["the-basics.html", "4.1 The basics", " 4.1 The basics TABLE 4.1: The basics - The first functions to learn Keyword Bae Freq Essential Comment ? H Y str M Y strucutre TABLE 4.2: The basics - Important operators and assignment Keyword Bae Freq Essential Comment %in% M Y Value Matching match M N Value Matching = H Y &lt;- L N &lt;&lt;- M Y head H N tail M N subset L N Subsetting Vectors, Matrices and Data Frames with L N Evaluate an Expression in a Data Environment assign L N Assign a Value to a Name get L N Return the Value of a Named Object TABLE 4.3: The basics - Comparison Keyword Bae Freq Essential Comment all.equal L N Test if Two Objects are (Nearly) Equal identical L N Test Objects for Exact Equality !=, ==, &gt;, &gt;=, &lt;, &lt;= H Y Comparison Operator is.na H Y complete.cases L N Find Complete Cases is.finite M Y TABLE 4.4: The basics - Basic math Keyword Bae Freq Essential Comment *, +, -, /, ^ H Y Math operator %% M Y Modulus %/% L N Integer division abs H Y sign M N acos L Y asin L Y atan L Y atan2 L Y sin L Y cos L Y tan L Y ceiling H Y floor H N round H Y trunc H N signif M Y rounds the values in its first argument to the specified number of significant digits exp H Y log H Y log10 L Y log2 L Y sqrt H N max H Y min H Y prod L N sum H Y cummax L N cummin L N cumprod L N cumsum L N diff L N pmax L N pairwise max pmin L N pairwise min range L N mean H Y median H Y cor H Y sd H Y var H Y rle L N Run Length Encoding TABLE 4.5: The basics - Functions to do with functions Keyword Bae Freq Essential Comment function H Y missing M Y Does a Formal Argument have a Value? on.exit L Y return H N invisible L N Change the Print Mode to Invisible TABLE 4.6: The basics - Logical - sets Keyword Bae Freq Essential Comment &amp;, |, ! H Y xor L Y all L Y Are All Values True? any L Y Are Some Values True? intersect M Y union M Y setdiff L Y setequal L Y which L N Which indices are TRUE? TABLE 4.7: The basics - Vectors and matrices Keyword Bae Freq Essential Comment c H Y matrix H Y # automatic coercion rules character &gt; numeric &gt; logical H Y length H Y dim H Y ncol H N nrow H N cbind H Y rbind H Y names M Y colnames H Y rownames M Y t H Y diag H Y sweep L N Sweep out Array Summaries as.matrix H Y data.matrix L N Convert a Data Frame to a Numeric Matrix TABLE 4.8: The basics - Making vectors Keyword Bae Freq Essential Comment c H Y rep H Y rep_len L N Replicate Elements of Vectors and Lists with length.out seq M Y seq_len L N seq_along L N rev M Y sample H Y choose H Y factorial M Y combn L N Generate All Combinations of n Elements, Taken m at a Time (is/as).(character/numeric/logical/…) H Y TABLE 4.9: The basics - Lists - data.frames Keyword Bae Freq Essential Comment list H Y unlist L Y Flatten Lists data.frame H Y as.data.frame H Y split H Y expand.grid L N Create a Data Frame from All Combinations of Factor Variables TABLE 4.10: The basics - Control flow Keyword Bae Freq Essential Comment if H Y &amp;&amp; L Y || (short circuiting) L Y for H Y while L N next M Y break M Y switch L Y ifelse L N Conditional Element Selection TABLE 4.11: The basics - Apply - friends Keyword Bae Freq Essential Comment lapply L N Apply a Function over a List or Vector sapply L N user-friendly version and wrapper of lapply vapply L N similar to sapply, but has a pre-specified type of return value apply M N Apply Functions Over Array Margins tapply L N Apply a Function Over a Ragged Array replicate L N Apply a Function over a List or Vector "],
["common-data-structures.html", "4.2 Common data structures", " 4.2 Common data structures TABLE 4.12: Common data structures - Date time Keyword Bae Freq Essential Comment ISOdate L N ISOdatetime L N strftime H Y Date-time Conversion Functions to and from Character strptime H Y Date-time Conversion Functions to and from Character date M Y difftime H Y julian L Y Extract Parts of a POSIXt or Date Object months L N Extract Parts of a POSIXt or Date Object quarters L N Extract Parts of a POSIXt or Date Object weekdays L N Extract Parts of a POSIXt or Date Object library(lubridate) L N TABLE 4.13: Common data structures - Character manipulation Keyword Bae Freq Essential Comment grep H Y Pattern Matching and Replacement agrep L N Approximate String Matching (Fuzzy Matching) gsub M Y or use sub strsplit H Y chartr L N Character Translation and Casefolding nchar M Y tolower M Y toupper H Y substr H Y paste H Y library(stringr) L N TABLE 4.14: Common data structures - Factors Keyword Bae Freq Essential Comment factor M Y levels M Y nlevels L N reorder L N Reorder Levels of a Factor relevel L N Reorder Levels of Factor cut L Y findInterval L N Find Interval Numbers or Indices interaction L N Compute Factor Interactions options(stringsAsFactors = FALSE) L N TABLE 4.15: Common data structures - Array manipulation Keyword Bae Freq Essential Comment array L N Multi-way Arrays dim H Y dimnames M Y aperm L N Array Transposition library(abind) L N "],
["statistics.html", "4.3 Statistics", " 4.3 Statistics TABLE 4.16: Statistics - Ordering and tabulating Keyword Bae Freq Essential Comment duplicated L Y Determine Duplicated Elements unique H Y merge L N order H Y rank L Y quantile L Y sort H Y table M Y ftable L Y Flat Contingency Tables TABLE 4.17: Statistics - Linear models Keyword Bae Freq Essential Comment fitted L Y Extract Model Fitted Values predict H Y resid L Y Extract Model Residuals rstandard L Y Regression Deletion Diagnostics lm H Y glm H Y hat L Y influence.measures M Y Regression Deletion Diagnostics logLik L Y df M Y deviance M Y formula H Y ~ H Y I H Y anova H Y coef M Y confint M Y vcov H Y contrasts L Y Get and Set Contrast Matrices TABLE 4.18: Statistics - Miscellaneous tests Keyword Bae Freq Essential Comment apropos(“\\.test$”) L Y TABLE 4.19: Statistics - Random variables Keyword Bae Freq Essential Comment (q, p, d, r) * (beta, binom, cauchy, chisq, exp, f, gamma, geom, H Y TABLE 4.20: Statistics - Matrix algebra Keyword Bae Freq Essential Comment crossprod L Y Matrix Crossproduct tcrossprod L N Matrix Crossproduct eigen H Y qr L Y svd L Y %*% H Y %o% L Y Outer Product of Arrays outer H Y rcond L N Compute or Estimate the Condition Number of a Matrix solve H Y Solve a System of Equations "],
["working-with-r.html", "4.4 Working with R", " 4.4 Working with R TABLE 4.21: Working with R - Workspace Keyword Bae Freq Essential Comment ls H Y List Objects exists M Y rm M Y getwd H Y setwd H Y q L Y source H Y install.packages H Y library H Y require H Y TABLE 4.22: Working with R - Help Keyword Bae Freq Essential Comment help L N ? H Y help.search L N apropos L Y RSiteSearch L N Search for Key Words or Phrases in Documentation citation L Y demo L Y example L Y vignette L Y View, List or Get R Source of Package Vignettes TABLE 4.23: Working with R - Debugging Keyword Bae Freq Essential Comment traceback L Y browser L Y Environment Browser recover L Y Browsing after an Error options(error = ) L Y stop L Y Stop Function Execution warning H Y message L Y tryCatch L Y try L Y "],
["io.html", "4.5 I/O", " 4.5 I/O TABLE 4.24: I/O - Output Keyword Bae Freq Essential Comment print H Y cat H Y message L Y warning H Y dput L N Write an Object to a File or Recreate it format H Y sink L Y Send R Output to a File capture.output L Y Send Output to a Character String or File TABLE 4.25: I/O - Reading and writing data Keyword Bae Freq Essential Comment data L N Loads specified data sets, or list the available data sets. count.fields L N read.csv H Y write.csv H Y read.delim L N write.delim L N read.fwf L N readLines M Y writeLines M Y readRDS L N Serialization Interface for Single Objects saveRDS L N load L Y save L Y library(foreign) L N TABLE 4.26: I/O - Files and directories Keyword Bae Freq Essential Comment dir H Y basename L Y removes all of the path up to and including the last path separator dirname L Y tools::file_ext L Y file.path L Y path.expand L Y Expand File Paths normalizePath L Y Express File Paths in Canonical Form file.choose L Y file.copy L Y file.create L Y file.remove L Y file.rename L Y dir.create L Y file.exists L Y file.info L Y tempdir L Y tempfile L Y download.file L Y library(downloader) L N -->"],
["ggplot2.html", "Chapter 5 Week 9 : Rstudio and some useful packages 2 - ggplot2", " Chapter 5 Week 9 : Rstudio and some useful packages 2 - ggplot2 9주차 강의 예정 자료입니다. 이번 시간에는 ggplot2의 사용법을 예제를 통해 알아보겠습니다. https://rpubs.com/kimwoohyung/ggplot2의 자료를 많이 참고하였습니다. "],
["introduction-1.html", "5.1 Introduction", " 5.1 Introduction library(ggplot2) ## ## Attaching package: &#39;ggplot2&#39; ## The following object is masked from &#39;package:yarrr&#39;: ## ## diamonds ## The following object is masked from &#39;package:pkr&#39;: ## ## unit library(gcookbook) library(plyr) ## ----------------------------------------------------- ## You have loaded plyr after dplyr - this is likely to cause problems. ## If you need functions from both plyr and dplyr, please load plyr first, then dplyr: ## library(plyr); library(dplyr) ## ----------------------------------------------------- ## ## Attaching package: &#39;plyr&#39; ## The following objects are masked from &#39;package:dplyr&#39;: ## ## arrange, count, desc, failwith, id, mutate, ## rename, summarise, summarize library(reshape2) ###################################################################################### ## scatter plot (geom_point) ###################################################################################### plot(mtcars$wt, mtcars$mpg) qplot(mtcars$wt, mtcars$mpg) ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point() tophit &lt;- tophitters2001[1:25,] tophit &lt;- tophit[,c(&quot;name&quot;, &quot;lg&quot;, &quot;avg&quot;)] # y축 이산형 그래프 ggplot(tophit, aes(x = avg, y = name, col=lg)) + geom_point() # 그래프 정렬하기 &amp; 그래프 격자 없애기 &amp; 수평선 점선으로 바꾸기 ggplot(tophit, aes(x = avg, y = reorder(name, avg))) + geom_point(size = 3) + theme_bw() + theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.major.y = element_line(color = &quot;grey60&quot;, linetype = &quot;dashed&quot;)) # x, y축 바꿔서 그치기 &amp; 그래프 격자 없애기 &amp; 수직선 점선으로 바꾸기 &amp; X축 값 정의 및 회전 ggplot(tophit, aes(x = reorder(name, avg), y = avg)) + geom_point(size = 3) + theme_bw() + theme(axis.text.x = element_text(angle = 60, hjust = 1), panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank(), panel.grid.major.x = element_line(color = &quot;grey60&quot;, linetype = &quot;dashed&quot;)) # 두개 변수로 정의하여 그리기 nameorder &lt;- tophit$name[order(tophit$lg, tophit$avg)] tophit$name &lt;- factor(tophit$name, levels = nameorder) # 격자 선이 그래프의 끝에서 끝까지 횡단하지 않고, 점까지만 가도록 표현 [ geom_segment ] ggplot(tophit, aes(x = avg, y = name)) + geom_segment(aes(yend = name), xend = 0, color = &quot;grey50&quot;) + geom_point(size = 3, aes(color = lg)) + scale_color_brewer(palette = &quot;Set1&quot;, limits = c(&quot;NL&quot;, &quot;AL&quot;)) + theme_bw() + theme(panel.grid.major.y = element_blank(), legend.position = c(1, 0.55), # 범례를 그래프 안쪽으로 옮김 legend.justification = c(1, 0.5)) # 그룹 별 그래프 분할 ggplot(tophit, aes(x = avg, y = name)) + geom_segment(aes(yend = name), xend = 0, color = &quot;grey50&quot;) + geom_point(size = 5, aes(color = lg)) + scale_color_brewer(palette = &quot;Set1&quot;, limits = c(&quot;NL&quot;, &quot;AL&quot;), guide = FALSE) + theme_bw() + theme(panel.grid.major.y = element_blank()) + facet_grid(lg ~ ., scales = &quot;free_y&quot;, space = &quot;free_y&quot;) # 그룹 별 데이터 구별 # 색상기준 ggplot(heightweight, aes(x = ageYear, y = heightIn, color = sex)) + geom_point() # 점 모양 기준 ggplot(heightweight, aes(x = ageYear, y = heightIn, shape = sex)) + geom_point() ggplot(heightweight, aes(x = ageYear, y = heightIn, color = sex, shape = sex)) + geom_point() + scale_shape_manual(values = c(1,2)) + scale_color_brewer(palette = &quot;Set1&quot;) ggplot(heightweight, aes(x = ageYear, y = heightIn, color = sex, shape = sex)) + geom_point() + scale_shape_manual(values = c(3,2)) + scale_color_brewer(palette = &quot;Set1&quot;) # 기준 정의에 따라 구별 hw &lt;-heightweight hw$weightGroup &lt;- cut(hw$weightLb, breaks = c(-Inf, 100, Inf), labels = c(&quot;&lt; 100&quot;, &quot;&gt;= 100&quot;)) # x축이 이산형일 때 점들을 랜덤하게 조금식 이동시켜 표현 ggplot(ChickWeight, aes(x = Time, y = weight)) + geom_point() ggplot(ChickWeight, aes(x = Time, y = weight)) + geom_jitter() # 이동 적용 # 적합된 회귀선 추가하기 sp &lt;- ggplot(ChickWeight, aes(x = Time, y = weight)) sp + geom_point(color = &quot;blue&quot;) + stat_smooth(method = lm, se = TRUE, color = &quot;red&quot;) sp + geom_jitter(color = &quot;blue&quot;) + stat_smooth(method = lm, se = TRUE, color = &quot;red&quot;) #그룹 별 회귀선 추가하기 sps &lt;- ggplot(heightweight, aes(x = ageYear, y = heightIn, color = sex)) + geom_point() + scale_color_brewer(palette = &quot;Set1&quot;) sps + geom_smooth() ## `geom_smooth()` using method = &#39;loess&#39; # 예측값 실제값 그래프로 표현하기 (함수) predictvals &lt;- function(model, xvar, yvar, xrange = NULL, sample = 100, ...){ if(is.null(xrange)){ if(any(class(model) %in% c(&quot;lm&quot;, &quot;glm&quot;))) xrange &lt;- range(model$model[[xvar]]) else if(any(class(model) %in% &quot;loess&quot;)) xrange &lt;- range(model$x) } newdata &lt;- data.frame(x = seq(xrange[1], xrange[2], length.out = sample)) names(newdata) &lt;- xvar newdata[[yvar]] &lt;- predict(model, newdata = newdata, ...) newdata } modlinear &lt;- lm(heightIn ~ ageYear, heightweight) modloess &lt;- loess(heightIn ~ ageYear, heightweight) lm_predicted &lt;- predictvals(modlinear, &quot;ageYear&quot;, &quot;heightIn&quot;) loess_predicted &lt;- predictvals(modloess, &quot;ageYear&quot;, &quot;heightIn&quot;) sp &lt;- ggplot(heightweight, aes(x = ageYear, y = heightIn)) + geom_point(color = &quot;grey40&quot;) sp + geom_line(data = lm_predicted, color = &quot;red&quot;, size = 0.8) + geom_line(data = loess_predicted, color = &quot;blue&quot;, size = 0.8) #산점도의 점에 라벨 붙이기 sp &lt;- ggplot(subset(countries, Year == 2009 &amp; healthexp &gt; 2000), aes(x = healthexp, y = infmortality)) + geom_point() # 특정 값에 특정 단어로 라벨 붙이기 sp + annotate(&quot;text&quot;, x = 4350, y = 5.4, label = &quot;Canada&quot;) + annotate(&quot;text&quot;, x = 7400, y = 6.8, label = &quot;USA&quot;) # 데이터 값을 라벨로 붙이기 sp + geom_text(aes(label = Name), size = 4) # 라벨의 위치를 데이터값보다 조금 크게 설정 sp + geom_text(aes(y = infmortality + 0.1, label = Name), size = 4, vjust = 0) sp + geom_text(aes(x = healthexp + 100, label = Name), size = 4, hjust = 0) # 특정 값만 라벨 붙이기 cdat &lt;- subset(countries, Year == 2009 &amp; healthexp &gt; 2000) cdat$Name1 &lt;- cdat$Name idx &lt;- cdat$Name %in% c(&quot;Andorra&quot;, &quot;France&quot;, &quot;Canada&quot;) cdat$Name1[!idx] &lt;- NA ggplot(cdat, aes(x = healthexp, y = infmortality)) + geom_point() + geom_text(aes(y = infmortality + 0.1, label = Name1), size = 4, vjust = 0) ## Warning: Removed 24 rows containing missing values ## (geom_text). ## Warning: Removed 24 rows containing missing values (geom_text). # 거품그래프(balloon plot) hec &lt;- HairEyeColor[,,&quot;Male&quot;] + HairEyeColor[,,&quot;Female&quot;] hec &lt;- melt(hec, value.name = &quot;count&quot;) ggplot(hec, aes(x = Eye, y = Hair)) + geom_point(aes(size = count), shape = 21, color = &quot;black&quot;, fill = &quot;cornsilk&quot;) + scale_size_area(max_size = 20, guide = FALSE) + geom_text(aes(y = as.numeric(Hair)-sqrt(count)/22, label = count), vjust = 1, color = &quot;grey60&quot;, size = 4) # 산점도 행렬 만들기 c2009 &lt;- subset(countries, Year == 2009, select = c(Name, GDP, laborrate, healthexp, infmortality)) plot(c2009[,2:5]) panel.hist &lt;- function(x, ...) { usr &lt;- par(&quot;usr&quot;); on.exit(par(usr)) par(usr = c(usr[1:2], 0, 1.5) ) h &lt;- hist(x, plot = FALSE) breaks &lt;- h$breaks; nB &lt;- length(breaks) y &lt;- h$counts; y &lt;- y/max(y) rect(breaks[-nB], 0, breaks[-1], y, col = &quot;cyan&quot;, ...) } panel.cor &lt;- function(x, y, digits = 2, prefix = &quot;&quot;, cex.cor, ...) { usr &lt;- par(&quot;usr&quot;); on.exit(par(usr)) par(usr = c(0, 1, 0, 1)) r &lt;- abs(cor(x, y)) txt &lt;- format(c(r, 0.123456789), digits = digits)[1] txt &lt;- paste0(prefix, txt) if(missing(cex.cor)) cex.cor &lt;- 0.8/strwidth(txt) text(0.5, 0.5, txt, cex = cex.cor * r) } panel.lm &lt;- function(x, y, col = par(&quot;col&quot;), bg = NA, pch = par(&quot;pch&quot;), cex = 1, col.smooth = &quot;black&quot;, ...){ points(x, y, pch = pch, col = col, bg = bg, cex = cex) abline(stats::lm(y ~ x), col = col.smooth, ...) } # 데이터에 대한 LOWESS선(평활선) 추가 pairs(c2009[,2:5], pch = &quot;.&quot;, upper.panel = panel.cor, diag.panel = panel.hist, lower.panel = panel.lm) # 데이터에 대한 회귀적합선 추가 pairs(c2009[,2:5], pch = &quot;.&quot;, upper.panel = panel.cor, diag.panel = panel.hist, lower.panel = panel.smooth) ###################################################################################### ## scatter + line plot (geom_point/ geom_line) ###################################################################################### plot(pressure$temperature, pressure$pressure, type = &quot;l&quot;) points(pressure$temperature, pressure$pressure) qplot(temperature, pressure, data = pressure, geom = c(&quot;line&quot;, &quot;point&quot;)) ggplot(pressure, aes(x = temperature, y = pressure)) + geom_point() + geom_line() ###################################################################################### ## line plot (geom_line) ###################################################################################### ggplot(BOD, aes(x = Time, y = demand)) + geom_line() + ylim(0, max(BOD$demand)) ggplot(BOD, aes(x = Time, y = demand)) + geom_line() + expand_limits(y = 0) ggplot(BOD, aes(x = Time, y = demand)) + geom_line() + geom_point() # 이산형 변수값에 따른 구분 tg &lt;- ddply(ToothGrowth, c(&quot;supp&quot;, &quot;dose&quot;), summarize, length = mean(len)) # 색상으로 구분 ggplot(tg, aes(x = dose, y = length, color = supp)) + geom_line() ggplot(tg, aes(x = factor(dose), y = length, color = supp, group = supp)) + geom_line() # group = supp 주의! : 이 명령문이 없으면 데이터를 어떻게 묶어서 그릴지 모름 # Line type으로 구분 ggplot(tg, aes(x = dose, y = length, linetype = supp)) + geom_line() # 점 형태로 구분 ggplot(tg, aes(x = dose, y = length, shape = supp)) + geom_line() + geom_point(size = 4) # 점 색상으로 구분 ggplot(tg, aes(x = dose, y = length, fill = supp)) + geom_line() + geom_point(size = 4, shape = 21) # 두 선이 겹칠때 하나의 선을 옆으로 이동시켜 표현 ggplot(tg, aes(x = dose, y = length, shape = supp)) + geom_line(position = position_dodge(0.1)) + geom_point(position = position_dodge(0.1), size = 4) # 선 형태 바꾸기 [ linetype ] ggplot(tg, aes(x = dose, y = length, color = supp)) + geom_line(linetype = &quot;dashed&quot;) + geom_point(shape = 22, size = 3, fill = &quot;white&quot;) # 점 형태 바꾸기 [ shape ] ################################# pd &lt;- position_dodge(0.2) # ################################# ggplot(tg, aes(x = dose, y = length, fill = supp)) + geom_line(position = pd) + geom_point(shape = 21, size = 5, position = pd) + scale_fill_manual(values = c(&quot;black&quot;, &quot;white&quot;)) # sample Data sunspotyear &lt;- data.frame(Year = as.numeric(time(sunspot.year)), Sunspots = as.numeric(sunspot.year)) # 음영 영역 그래프 그리기 ggplot(sunspotyear, aes(x = Year, y = Sunspots)) + geom_area() # 음영 투명도 설정하기 [ alpha ] ggplot(sunspotyear, aes(x = Year, y = Sunspots)) + geom_area(color = &quot;black&quot;, fill = &quot;blue&quot;, alpha = 0.5) # 누적 영역 그래프 그리기 ggplot(uspopage, aes(x = Year, y = Thousands, fill = AgeGroup)) + geom_area() # 영역색상 그라데이션 넣기 ggplot(uspopage, aes(x = Year, y = Thousands, fill = AgeGroup)) + geom_area(color = &quot;black&quot;, size = 0.2, alpha = 0.4) + scale_fill_brewer(palette = &quot;Blues&quot;, breaks = rev(levels(uspopage$AgeGroup))) # 데이터 순서정렬하기 &amp; 양쪽 테두리 지우기 ggplot(uspopage, aes(x = Year, y = Thousands, fill = AgeGroup, order = desc(AgeGroup))) + geom_area(color = NA, alpha = 0.4) + scale_fill_brewer(palette = &quot;Blues&quot;) + geom_line(position = &quot;stack&quot;, size = 0.2) # 비율 누적 영역 그래프 그리기 uspopage_prop &lt;- ddply(uspopage, &quot;Year&quot;, transform, Percent = Thousands / sum(Thousands) * 100) ggplot(uspopage_prop, aes(x = Year, y = Percent, fill = AgeGroup)) + geom_area(color = &quot;black&quot;, size = 0.2, alpha = 0.4) + scale_fill_brewer(palette = &quot;Blues&quot;, breaks = rev(levels(uspopage$AgeGroup))) # 그래프에 신뢰 영역 추가하기 clim &lt;- subset(climate, Source == &quot;Berkeley&quot;, select = c(&quot;Year&quot;, &quot;Anomaly10y&quot;, &quot;Unc10y&quot;)) # 신뢰영역 음영으로 표현 ggplot(clim, aes(x = Year, y = Anomaly10y)) + geom_ribbon(aes(ymin = Anomaly10y - Unc10y, ymax = Anomaly10y + Unc10y), alpha = 0.2) + geom_line() # 신뢰영역 점선으로 표현 ggplot(clim, aes(x = Year, y = Anomaly10y)) + geom_line(aes(y = Anomaly10y - Unc10y), linetype = &quot;dotted&quot;) + geom_line(aes(y = Anomaly10y + Unc10y), linetype = &quot;dotted&quot;) + geom_line() # ###################################################################################### ## barplot (geom_bar) ###################################################################################### barplot(BOD$demand, names.arg = BOD$Time) barplot(table(mtcars$cyl)) # x값을 숫자로 인식 # qplot(BOD$Time, BOD$demand, geom = &quot;bar&quot;, stat = &quot;identity&quot;) ggplot(BOD, aes(x = Time, y = demand)) + geom_bar(stat = &quot;identity&quot;) # x값을 요인으로 변환 # qplot(as.factor(BOD$Time), BOD$demand, geom = &quot;bar&quot;, stat = &quot;identity&quot;) ggplot(BOD, aes(x = factor(Time), y = demand)) + geom_bar(stat = &quot;identity&quot;) # 막대 색상 채우기/테두리 설정하기 (fill : 채우기/ colour(or color) : 테두리) ggplot(pg_mean, aes(x = group, y = weight)) + geom_bar(stat = &quot;identity&quot;, fill = &quot;lightblue&quot;, colour = &quot;black&quot;) # 막대 묶어서 표현하기(나누어 표현하고 싶은 변수를 색상으로 지정) ggplot(cabbage_exp, aes(x = Date, y = Weight, fill = Cultivar)) + geom_bar(stat = &quot;identity&quot;, position = &quot;dodge&quot;) # dodge : &quot;피하다&quot;라는 의미로 막대를 새로운 값을 기준으로 나누어 표현 ggplot(cabbage_exp, aes(x = Date, y = Weight, fill = Cultivar)) + geom_bar(stat = &quot;identity&quot;, position = &quot;dodge&quot;, color = &quot;black&quot;) + scale_fill_brewer(palette = &quot;Pastel1&quot;) # 빈도수 막대 그래프 그리기 # x가 이산형 ggplot(diamonds, aes(x = cut)) + geom_bar() # x가 연속형 ggplot(diamonds, aes(x = carat)) + geom_bar() # 막대 색상 넣기/ 축 이름 정의하기(reorder) upc &lt;- subset(uspopchange, rank(Change) &gt; 40) ggplot(upc, aes(x = reorder(Abb, Change), y = Change, fill = Region)) + geom_bar(stat = &quot;identity&quot;, color = &quot;black&quot;) + scale_fill_manual(values = c(&quot;#669933&quot;, &quot;#FFCC66&quot;)) + xlab(&quot;State&quot;) # 양수/음수 다른 색상으로 표현 (구분 inde를 만들어 색상 변수로 지정) csub &lt;- subset(climate, Source == &quot;Berkeley&quot; &amp; Year &gt;= 1900 ) csub$pos &lt;- csub$Anomaly10y &gt;= 0 ggplot(csub, aes(x = Year, y = Anomaly10y, fill = pos)) + geom_bar(stat = &quot;identity&quot;, position = &quot;identity&quot;) # 막대 그래프 테두리 두께 설정(size) / 범례 지우기(guide = FALSE) ggplot(csub, aes(x = Year, y = Anomaly10y, fill = pos)) + geom_bar(stat = &quot;identity&quot;, position = &quot;identity&quot;, color = &quot;black&quot;, size = 0.0001) + scale_fill_manual(values = c(&quot;#CCEEFF&quot;, &quot;#FFDDDD&quot;), guide = FALSE) # 막대 너비/ 간격 조절하기(width : 최대 너비는 1) ggplot(pg_mean, aes(x = group, y = weight)) + geom_bar(stat = &quot;identity&quot;, width = 0.5) # 막대 그룹 간의 간격 조절하기 (default : 0.9) ggplot(cabbage_exp, aes(x = Date, y = Weight, fill = Cultivar)) + geom_bar(stat = &quot;identity&quot;, width = 0.4, position = &quot;dodge&quot;) # 막대 그룹 내부간의 간격 조절 (default : 0.9) ggplot(cabbage_exp, aes(x = Date, y = Weight, fill = Cultivar)) + geom_bar(stat = &quot;identity&quot;, width = 0.3, position = position_dodge(0.5)) # 범례 순서 바꾸기 (reverse = TRUE) ggplot(cabbage_exp, aes(x = Date, y = Weight, fill = Cultivar)) + geom_bar(stat = &quot;identity&quot;) + guides(fill = guide_legend(reverse = TRUE)) # 막대 쌓는 순서 바꾸기 ggplot(cabbage_exp, aes(x = Date, y = Weight, fill = Cultivar, order = desc(Cultivar))) + geom_bar(stat = &quot;identity&quot;) # 비율 누적 막대 그래프 그리기(막대 전체가 100%가 되도록) ce &lt;- ddply(cabbage_exp, &quot;Date&quot;, transform, percent_weight = Weight / sum(Weight) * 100) ggplot(ce, aes(x = Date, y = percent_weight, fill = Cultivar)) + geom_bar(stat = &quot;identity&quot;) # 막대에 라벨 추가하기 [ geom_text ] # 선 상단 [ vjust &lt; 0 ] ggplot(cabbage_exp, aes(x = interaction(Date, Cultivar), y = Weight)) + geom_bar(stat = &quot;identity&quot;) + geom_text(aes(label = Weight), vjust = -0.2) # 선 하단 [ vjust &gt; 0 ] ggplot(cabbage_exp, aes(x = interaction(Date, Cultivar), y = Weight)) + geom_bar(stat = &quot;identity&quot;) + geom_text(aes(label = Weight), vjust = 1.5, color = &quot;white&quot;) # 그래프 범위 설정 # max(데이터)로 지정 ggplot(cabbage_exp, aes(x = interaction(Date, Cultivar), y = Weight)) + geom_bar(stat = &quot;identity&quot;) + geom_text(aes(label = Weight), vjust = -0.2) + ylim(0, max(cabbage_exp$Weight) * 1.05) # 막대의 상단보다 조금 높은 위치로 지정(데이터에 따라 자동 조정) ggplot(cabbage_exp, aes(x = interaction(Date, Cultivar), y = Weight)) + geom_bar(stat = &quot;identity&quot;) + geom_text(aes(y = Weight + 0.1, label = Weight)) # 누적 합계 그래프 그리기 ce &lt;- arrange(cabbage_exp, Date, Cultivar) ce &lt;- ddply(ce, &quot;Date&quot;, transform, label = cumsum(Weight)) # ddply(data.frame, 그룹 기준 마지막 변수) ggplot(ce, aes(x = Date, y = Weight, fill = Cultivar)) + geom_bar(stat = &quot;identity&quot;, color = &quot;black&quot;) + geom_text(aes(y = label, label = paste(format(Weight, nsmall=2), &quot;kg&quot;)), size = 6, vjust = 1.5) + guides(fill = guide_legend(reverse = TRUE)) + scale_fill_brewer(palette = &quot;Pastel1&quot;) ###################################################################################### ## histogram (geom_histogram) ###################################################################################### hist(mtcars$mpg) # 상자(bin) 개수 지정 hist(mtcars$mpg, breaks = 10) qplot(mpg, data = mtcars, binwidth = 4) # ggplot(mtcars, aes(x = mpg)) + geom_histogram() ggplot(mtcars, aes(x = mpg)) + geom_histogram(binwidth = 4) h &lt;- ggplot(faithful, aes(x = waiting)) h + geom_histogram(binwidth = 8, fill = &quot;white&quot;, color = &quot;black&quot;, origin = 31) ## Warning: `origin` is deprecated. Please use `boundary` ## instead. ## Warning: `origin` is deprecated. Please use `boundary` instead. # 그룹화된 데이터로 여러개의 히스토그램 만들기 library(MASS) ## ## Attaching package: &#39;MASS&#39; ## The following object is masked from &#39;package:dplyr&#39;: ## ## select ggplot(birthwt, aes(x = bwt)) + geom_histogram(fill = &quot;white&quot;, color = &quot;black&quot;) + facet_grid(smoke ~ .) ## `stat_bin()` using `bins = 30`. Pick better value ## with `binwidth`. ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ggplot(birthwt, aes(x = bwt)) + geom_histogram(fill = &quot;white&quot;, color = &quot;black&quot;) + facet_grid(smoke ~ .) ## `stat_bin()` using `bins = 30`. Pick better value ## with `binwidth`. ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. # 그룹 라벨 정의 birthwt1 &lt;- birthwt birthwt1$smoke &lt;- factor(birthwt1$smoke) levels(birthwt1$smoke) ## [1] &quot;0&quot; &quot;1&quot; ## [1] &quot;0&quot; &quot;1&quot; birthwt$smoke &lt;- revalue(birthwt1$smoke, c(&quot;0&quot; = &quot;Nosmoke&quot;, &quot;1&quot; = &quot;Smoke&quot;)) ggplot(birthwt, aes(x = bwt)) + geom_histogram(fill = &quot;white&quot;, color = &quot;black&quot;) + facet_grid(smoke ~ ., scales = &quot;free&quot;) ## `stat_bin()` using `bins = 30`. Pick better value ## with `binwidth`. ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ###################################################################################### ## boxplot (geom_boxplot) ###################################################################################### boxplot(len ~ supp, data = ToothGrowth) qplot(ToothGrowth$supp, ToothGrowth$len, geom = &quot;boxplot&quot;) ggplot(ToothGrowth, aes(x = supp, y = len))+ geom_boxplot() # 두 변수의 상호작용을 X축으로 boxplot(len ~ supp + dose, data = ToothGrowth) qplot(interaction(ToothGrowth$supp, ToothGrowth$dose), ToothGrowth$len, geom = &quot;boxplot&quot;) ggplot(ToothGrowth, aes(x = interaction(supp, dose), y = len)) + geom_boxplot() ###################################################################################### ## 함수곡선 그리기 (stat_function) ###################################################################################### # 사용자함수 정의 myfun &lt;- function(xvar){ 1/(1 + exp(-xvar + 10)) } curve(myfun(x), from = 0, to = 20) curve(1-myfun(x), add = TRUE, col = &quot;red&quot;) # qplot(c(0,20), fun = myfun, stat = &quot;function&quot;, geom = &quot;line&quot;) ggplot(data.frame(x = c(0,20)), aes(x =x)) + stat_function(fun = myfun, geom = &quot;line&quot;) "],
["as-is-r-files.html", "A As-is R Files", " A As-is R Files 교수님께서 주신 원본 R 파일 입니다. "],
["lecture-3.html", "A.1 Lecture 3", " A.1 Lecture 3 ################################################# ##---------------------------------------------## ## Graphics ## ##---------------------------------------------## ################################################# # 상위수준 그림 함수는 그림을 생성한다. # 하위수준 그림 함수는 기존의 그림에 그림을 추가한다. ## 상위수준 그림 함수의 주요 인자 (arguments) ### # main : 제목 # xlab/ylab : x축 및 y축 레이블 # xlim/ylim : x축 및 y축 범위 # col : 색깔 # lty : 선 모양 # pch : 점 모양 # cex : 그림 성분의 크기 # lwd : 선 굵기 # type : 그림 타입 ################################################# ########## 상위수준 그림 함수 ############ ################################################# WD &lt;- &quot;D:\\\\AMC\\\\Education\\\\UU\\\\2017\\\\R\\\\Graphics\\\\&quot; setwd(WD) dta &lt;- read.csv(&quot;PK.csv&quot;) head(dta) str(dta) ################ scatter plot ################### plot(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0]) plot(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], log=&quot;y&quot;) plot(dta$TIME[dta$MDV==0], log(dta$DV[dta$MDV==0])) plot(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0] , xlab=&quot;Time (hr)&quot;, ylab=&quot;Concentration (ng/mL)&quot; , type=&quot;o&quot;, pch=2, col=1, main=&quot;PK time-course of Drug X&quot; , xlim =c(-2,218), ylim=c(0,80)) plot(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], axes=F, , xlab=&quot;Time (hr)&quot;, ylab=&quot;Concentration (ng/mL)&quot; , type=&quot;o&quot;, pch=2, col=1, main=&quot;PK time-course of Drug X&quot; , xlim =c(-2,218), ylim=c(0,80)) axis(1, at=seq(0, 218, 24)) axis(2) box() ################## Histogram #################### d.demog &lt;- read.csv(&quot;DEMOG.csv&quot;) # histogram hist(d.demog$HT) hist(d.demog$HT, breaks=10) hist(d.demog$HT, nclass=10) # with density line hist (d.demog$HT, probability=TRUE, breaks=10) lines(density(d.demog$HT)) hist (d.demog$HT, probability=TRUE, breaks=9, xaxt=&quot;n&quot; , main=&quot;Histogram for Height&quot;, xlab=&quot;Height (cm)&quot;, ylab=&quot;Probability (%)&quot;) axis(1, at=seq(min(d.demog$HT), max(d.demog$HT), 3)) lines(density(d.demog$HT)) hist (d.demog$HT, probability=TRUE, breaks=9, xaxt=&quot;n&quot; , main=&quot;Histogram for Height&quot;, xlab=&quot;Height (cm)&quot;, ylab=&quot;Probability (%)&quot; , col = &quot;lightblue&quot;, border = &quot;pink&quot;) axis(1, at=seq(min(d.demog$HT), max(d.demog$HT), 3)) lines(density(d.demog$HT)) ############## Box-Whisker Plot ################# # Box-and-Whisker Plot boxplot(d.demog$WT) boxplot(d.demog$WT ~ d.demog$SEX) boxplot(split(d.demog$WT, d.demog$SEX)) boxplot(WT ~ SEX, data=d.demog) boxplot(d.demog$WT ~ d.demog$SEX , names=c(&quot;Male&quot;,&quot;Female&quot;), ylab=&quot;AGE, year&quot;, ylim=c(min(d.demog$WT)-2, max(d.demog$WT)+2) , col=&quot;pink&quot;) boxplot(d.demog$WT ~ d.demog$SEX , names=c(&quot;Male&quot;,&quot;Female&quot;), ylab=&quot;AGE, year&quot;, ylim=c(min(d.demog$WT)-2, max(d.demog$WT)+2) , col=c(&quot;lightblue&quot;, &quot;salmon&quot;), width=c(0.6, 1)) #varwidth: if varwidth is TRUE, the boxes are drawn with widths proportional #to the square-roots of the number of observations in the groups. boxplot(d.demog$WT ~ d.demog$SEX , names=c(&quot;Male&quot;,&quot;Female&quot;), ylab=&quot;AGE, year&quot;, ylim=c(min(d.demog$WT)-2, max(d.demog$WT)+2) , col=c(&quot;lightblue&quot;, &quot;salmon&quot;) , varwidth=TRUE) ################## Bar Plot ##################### barplot(d.demog$HT) VADeaths barplot(VADeaths, border = &quot;dark blue&quot;) barplot(VADeaths, col = rainbow(20)) barplot(VADeaths, col = heat.colors(8)) barplot(VADeaths, col = gray.colors(4)) barplot(VADeaths, col = gray.colors(4), log=&quot;x&quot;) barplot(VADeaths, col = gray.colors(4), log=&quot;y&quot;) barplot(VADeaths, col = gray.colors(4), log=&quot;xy&quot;) ################## pie chart #################### drug.X.market &lt;- c(0.12, 0.29, 0.32, 0.22, 0.11, 0.28) names(drug.X.market) &lt;- c(&quot;South Korea&quot;,&quot;China&quot;,&quot;USA&quot;,&quot;Japan&quot;,&quot;Austria&quot;,&quot;EU&quot;) pie(drug.X.market) ################ matplot 함수 ################### # matrix와 column 사이의 그림 pct.95 &lt;- read.csv(&quot;pct95.csv&quot;) matplot(pct.95[,1], pct.95[,2:ncol(pct.95)], pch=1) matplot(pct.95[,1], pct.95[,2:ncol(pct.95)], pch=1, col=c(1,2,1), type=&quot;l&quot;, lty=1, lwd=c(1,2,1)) ###### Scatter plot matrices (pairs plots) ###### pairs(d.demog) #add a loess smoother, type: pairs(d.demog, panel = panel.smooth) panel.cor &lt;- function(x, y, digits=2, prefix=&quot;&quot;, cex.cor) { usr &lt;- par(&quot;usr&quot;); on.exit(par(usr)) par(usr = c(0, 1, 0, 1)) r = (cor(x, y)) txt &lt;- format(c(r, 0.123456789), digits=digits)[1] txt &lt;- paste(prefix, txt, sep=&quot;&quot;) if(missing(cex.cor)) cex &lt;- 1.5 text(0.5, 0.5, txt, cex = 1.5) } pairs(d.demog, lower.panel=panel.smooth, upper.panel=panel.cor) ################################################# ## 하위수준 그림 함수 ## ################################################# # points : 점추가 # lines : 선 추가 # abline : 기준선 추가 # mtext : 텍스트 추가 # legend : 설명(legend) 추가 # polygon : polygon 추가 ############ 점, 선, 설명 추가 하기 ############# plot(pct.95$TIME, pct.95$PCT50, main=&quot;PK of Drug X&quot; , type=&quot;l&quot;, xlab=&quot;Time (h)&quot;, ylab=&quot;Concentration (ng/ml)&quot; , ylim=range(0,80), lty=1, col=&quot;red&quot;, lwd=2) plot(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], main=&quot;PK of Drug X&quot; , type=&quot;n&quot;, xlab=&quot;Time (h)&quot;, ylab=&quot;Concentration (ng/ml)&quot; , ylim=range(0,80)) points(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], pch = 16, cex=0.8) lines(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], col=&quot;black&quot;, lwd=1) abline(40, 0, col=&quot;red&quot;, lty=2) #abline(a,b): y=a+b*x legend(&quot;topright&quot;, legend=c(&quot;Individual concentrations&quot;) , lty=1, col=&quot;black&quot;) ################# polygon 함수 ################### plot(c(1, 10), c(1, 6), type = &quot;n&quot;) polygon(c(2,8,8,2), c(5,4,3,2), col=&quot;lightgreen&quot;) plot(c(1, 9), 1:2, type = &quot;n&quot;) polygon(1:9, c(2,1,2,1,1,2,1,2,1), col = c(&quot;red&quot;, &quot;blue&quot;), border = c(&quot;green&quot;, &quot;yellow&quot;), lwd = 3, lty = c(&quot;dashed&quot;, &quot;solid&quot;)) ################# 그림 출력하기 ################## #--pdf graphics devices pdf(&quot;PK_of_Drug_X.pdf&quot;) plot(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], main=&quot;PK of Drug X&quot; , type=&quot;n&quot;, xlab=&quot;Time (h)&quot;, ylab=&quot;Concentration (ng/ml)&quot; , ylim=range(0,80)) points(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], pch = 16, cex=0.8) lines(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], col=&quot;black&quot;, lwd=1) abline(40, 0, col=&quot;red&quot;, lty=2) #abline(a,b): y=a+b*x legend(&quot;topright&quot;, legend=c(&quot;Individual concentrations&quot;) , lty=1, col=&quot;black&quot;) dev.off() #--PNG graphics devices png(&quot;PK_of_Drug_X.png&quot;) plot(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], main=&quot;PK of Drug X&quot; , type=&quot;n&quot;, xlab=&quot;Time (h)&quot;, ylab=&quot;Concentration (ng/ml)&quot; , ylim=range(0,80)) points(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], pch = 16, cex=0.8) lines(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], col=&quot;black&quot;, lwd=1) abline(40, 0, col=&quot;red&quot;, lty=2) #abline(a,b): y=a+b*x legend(&quot;topright&quot;, legend=c(&quot;Individual concentrations&quot;) , lty=1, col=&quot;black&quot;) dev.off() #--Windows graphics devices win.metafile(&quot;PK_of_Drug_X.wmf&quot;) plot(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], main=&quot;PK of Drug X&quot; , type=&quot;n&quot;, xlab=&quot;Time (h)&quot;, ylab=&quot;Concentration (ng/ml)&quot; , ylim=range(0,80)) points(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], pch = 16, cex=0.8) lines(dta$TIME[dta$MDV==0], dta$DV[dta$MDV==0], col=&quot;black&quot;, lwd=1) abline(40, 0, col=&quot;red&quot;, lty=2) #abline(a,b): y=a+b*x legend(&quot;topright&quot;, legend=c(&quot;Individual concentrations&quot;) , lty=1, col=&quot;black&quot;) dev.off() "],
["lecture-4.html", "A.2 Lecture 4", " A.2 Lecture 4 # 2017-03-29 setwd(&quot;D:/Rt&quot;) dir() mydata = read.csv(&quot;MyData2017.csv&quot;, as.is=TRUE) Theoph library(lattice) # trellis xyplot(conc ~ Time | Subject, data=Theoph) xyplot(conc ~ Time | Subject, data=Theoph, type=&quot;b&quot;) Theoph[,&quot;ID&quot;] = as.numeric(as.character(Theoph[,&quot;Subject&quot;])) xyplot(conc ~ Time | ID, data=Theoph, type=&quot;b&quot;) xyplot(conc ~ Time | as.factor(ID), data=Theoph, type=&quot;b&quot;) write.csv(Theoph, &quot;Theoph.csv&quot;, row.names=FALSE, quote=FALSE, na=&quot;&quot;) IDs = sort(unique(Theoph[,&quot;ID&quot;])) ; IDs nID = length(IDs) ; nID demog = unique(Theoph[,c(&quot;ID&quot;,&quot;Wt&quot;)]) colnames(demog) = c(&quot;ID&quot;, &quot;BWT&quot;) write.csv(demog, &quot;1-demog.csv&quot;, row.names=FALSE, quote=FALSE, na=&quot;&quot;) DV = Theoph[,c(&quot;ID&quot;,&quot;Time&quot;, &quot;conc&quot;)] colnames(DV) = c(&quot;ID&quot;, &quot;TIME&quot;, &quot;DV&quot;) write.csv(DV, &quot;3-DV.csv&quot;, row.names=FALSE, quote=FALSE, na=&quot;&quot;) adm = cbind(IDs, rep(0, nID), rep(320, nID)) colnames(adm) = c(&quot;ID&quot;, &quot;TIME&quot;, &quot;AMT&quot;) write.csv(adm, &quot;2-adm.csv&quot;, row.names=FALSE, quote=FALSE, na=&quot;&quot;) demog = read.csv(&quot;1-demog.csv&quot;, as.is=TRUE) adm = read.csv(&quot;2-adm.csv&quot;, as.is=TRUE) dv = read.csv(&quot;3-dv.csv&quot;, as.is=TRUE) AdmDv = merge(adm, dv, by=intersect(colnames(adm), colnames(dv)), all=TRUE) DataAll = merge(demog, AdmDv, by=c(&quot;ID&quot;), all=TRUE) -->"],
["r-tips.html", "B R Tips", " B R Tips Handbook of statistical distributions with applications (Krishnamoorthy 2006) Materials https://cran.r-project.org/manuals.html https://cran.r-project.org/doc/manuals/r-release/R-intro.pdf Changing defualt R console size and etc : 배균섭 교수님께서 알려주신 tip을 참고하여 video clip을 만들었습니다. 매일같이 마주하게 되는 R console이 너무 작게 느껴지셨다면 다음의 동영상을 참고하셔서 초기 세팅 (Rconsole 파일)을 바꿔서 해결할 수 있습니다. https://youtu.be/uSunEN8W5Mo --> References "],
["using-coursera.html", "B.1 Using Coursera", " B.1 Using Coursera PAGK에 보낸 이메일을 그대로 옮겼습니다. 배균섭 교수님의 추천을 받아 다음과 같은 강의와 책을 공유하고자 합니다. Coursera.com 에 유익한 R 강좌가 열렸습니다. “Mastering Software Development in R Specialization”이란 제목의 강좌인데 4개 Course를 무료로 들을 수 있게 되어있습니다. https://www.coursera.org/specializations/r 이것이 본래의 Link인데 여기서 각각의 Course를 찾거나 혹은 아래의 링크를 각각 클릭하여 하단에 나오는 “Audit”을 클릭하면 무료로 들을 수 있습니다. Audit 버튼이 안보이신다고 하신 분들이 몇분 계셔서 첨언합니다. Coursera 회원가입하시고 로그인 한 뒤, Enroll Now를 누르시면 Audit 혹은 청강하기 라디오버튼을 보실 수 있습니다. 앱에서도 마찬가지입니다. 이외에도 코세라에는 많은 유익한 강의가 있는 것 같습니다. 다만 코스(Course)의 묶음인 “Specialization” 에서는 유료등록(Enroll) 밖에 없으므로 Certificate가 필요하지 않다면, 각각의 코스를 구글검색 혹은 코세라 내에서 검색해서 “Audit(청강)” 하시면 무료로 강의를 들을 수 있습니다. https://www.coursera.org/learn/r-programming-environment https://www.coursera.org/learn/advanced-r https://www.coursera.org/learn/r-packages https://www.coursera.org/learn/r-data-visualization https://bookdown.org/rdpeng/RProgDA/ 이 링크는 무료로 공개된 강의 책자입니다. 강의를 듣지 않고 책으로 보고 싶으신 분은 참고하시면 됩니다. -->"],
["acknowledgement.html", "C Acknowledgement", " C Acknowledgement 이 웹북을 만드는데 도움을 주신 분들은 다음과 같습니다. Dr. Jekyll Hyde "],
["references.html", "References", " References "]
]
